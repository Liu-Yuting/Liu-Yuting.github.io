<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Flask-2：第一个Flask Application</title>
      <link href="/2023/11/19/python/flask/flask-2-di-yi-ge-flask-application/"/>
      <url>/2023/11/19/python/flask/flask-2-di-yi-ge-flask-application/</url>
      
        <content type="html"><![CDATA[<h1 id="Flask-2：第一个Flask-Application"><a href="#Flask-2：第一个Flask-Application" class="headerlink" title="Flask-2：第一个Flask Application"></a>Flask-2：第一个Flask Application</h1><h2 id="一、安装Flask"><a href="#一、安装Flask" class="headerlink" title="一、安装Flask"></a>一、安装Flask</h2><p>Flask是一个web框架，使用它首先要安装</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> flask<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>导入Flask模块</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> flask<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="二、最简单的栗子"><a href="#二、最简单的栗子" class="headerlink" title="二、最简单的栗子"></a>二、最简单的栗子</h2><h3 id="主代码"><a href="#主代码" class="headerlink" title="主代码"></a>主代码</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""导入类flask.Flask"""</span><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token triple-quoted-string string">"""创建实例解析"""</span><span class="token triple-quoted-string string">"""实例化创建一个Flask应用，第一个参数是Flask应用的名称。__name__是一个标识Python模块的名字的变量：·如果当前模块是主模块，那么此模块名字就是__main__；·如果当前模块是被import的，则此模块名字为文件名。"""</span>app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token triple-quoted-string string">"""装饰器解析"""</span><span class="token triple-quoted-string string">"""·定义hello_world函数，它返回一段html文本；·app.route("/")返回一个装饰器，装饰器来为函数hello_world绑定对应的URL（路由）；·当用户在浏览器访问这个URL的时候，就会出发这个函数，获取返回值。"""</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello_world</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">"Hello World!"</span><span class="token triple-quoted-string string">"""主函数解析"""</span><span class="token triple-quoted-string string">"""如果当前模块儿是主模块，则变量__name为'__main__'，此时调用run()方法启动Flask应用"""</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>port<span class="token operator">=</span><span class="token number">8000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运行报错："><a href="#运行报错：" class="headerlink" title="运行报错："></a>运行报错：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">"""以一种访问权限不允许的方式做了一个访问套接字的尝试。"""</span><span class="token comment"># 原因：</span><span class="token comment"># --端口被占用</span><span class="token comment"># 切换端口：app.run(port=8080)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运行输出："><a href="#运行输出：" class="headerlink" title="运行输出："></a>运行输出：</h3><img src="/2023/11/19/python/flask/flask-2-di-yi-ge-flask-application/0.png" class><h3 id="浏览器访问："><a href="#浏览器访问：" class="headerlink" title="浏览器访问："></a>浏览器访问：</h3><img src="/2023/11/19/python/flask/flask-2-di-yi-ge-flask-application/1.png" class><p>遇到设置不生效：<a href="https://www.cnblogs.com/poloyy/p/14993520.html">https://www.cnblogs.com/poloyy/p/14993520.html </a></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> Flask </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask-1：介绍</title>
      <link href="/2023/11/18/python/flask/flask-1-jie-shao/"/>
      <url>/2023/11/18/python/flask/flask-1-jie-shao/</url>
      
        <content type="html"><![CDATA[<h1 id="Flask-1：介绍"><a href="#Flask-1：介绍" class="headerlink" title="Flask-1：介绍"></a>Flask-1：介绍</h1><h2 id="一、Flask简介"><a href="#一、Flask简介" class="headerlink" title="一、Flask简介"></a>一、Flask简介</h2><ul><li><strong>轻</strong>：Flask是一个轻量级web框架，使用python语言编写；</li><li><strong>易</strong>：较其他同类型框架更为灵活、轻便、容易上手；</li><li><strong>快</strong>：小型团队在短时间内就可以完成功能丰富的中小型网站或web服务的实现。</li></ul><h3 id="定制化"><a href="#定制化" class="headerlink" title="定制化"></a>定制化</h3><ul><li>Flask具有很强的定制性，用户可以根据自己的需求来添加相应的功能；</li><li>在保持核心功能简单的同时实现功能的丰富与扩展；</li><li>其强大的插件库可以让用户实现个性化的网站定制，开发出功能强大的网站。</li></ul><h2 id="二、Flask的特点"><a href="#二、Flask的特点" class="headerlink" title="二、Flask的特点"></a>二、Flask的特点</h2><h3 id="1、微框架"><a href="#1、微框架" class="headerlink" title="1、微框架"></a>1、微框架</h3><p>Flask是一个python实现的web开发微框架，但是这个“微”并<strong>不</strong>代表着Flask功能比较简陋、有所欠缺。</p><h4 id="微框架中的“微”意味着"><a href="#微框架中的“微”意味着" class="headerlink" title="微框架中的“微”意味着"></a>微框架中的“微”意味着</h4><ul><li>Flask旨在保持核心简单而易于扩展；</li><li>Flask不会替用户做出太多决策，比如使用何种数据库；</li><li>Flask的选项（比如使用何种模板引擎）通常有多个，用户很容易替换。</li></ul><h3 id="2、Flask的扩展性"><a href="#2、Flask的扩展性" class="headerlink" title="2、Flask的扩展性"></a>2、Flask的扩展性</h3><ul><li>默认情况下，Flask <strong>不包含</strong>数据库抽象层、模板引擎、身份认证或其他任何已有多种库可以胜任的功能；</li><li>但是Flask支持用<strong>扩展</strong>来给应用添加这些功能，应用程序可以很方便的集成这些扩展；</li><li>众多的扩展提供了数据库集成、表单认证、上传处理、各种各样的开放认证技术等功能。</li></ul><h4 id="Flask与扩展之间的关系"><a href="#Flask与扩展之间的关系" class="headerlink" title="Flask与扩展之间的关系"></a>Flask与扩展之间的关系</h4><img src="/2023/11/18/python/flask/flask-1-jie-shao/0.png" class><h3 id="3、约定优于配置"><a href="#3、约定优于配置" class="headerlink" title="3、约定优于配置"></a>3、约定优于配置</h3><ul><li>设计不好的框架通常需要多个配置文件，每个都有许多设置选项，程序员需要记忆大量的参数配置；</li><li>但Flask遵循<strong>约定优于配置</strong>（Convention Over Configuration），也称作按约定编程是一种<strong>软件设计范式</strong>；</li><li>目的在于减少软件开发人员所需要做出的约定的数量，从而将开发变得简单，而又不失去其中的灵活性，开发人员仅仅需要规定应用中不符合约定的部分；</li><li>Flask存在有众多的配置选项，但是在最初始状况下，它们都有一个常用的默认值，并会遵循一些惯例；</li><li>例如：按照惯例，模板和静态文件分别存储在应用python源代码树下的子目录templates和static里；</li><li>虽然这个配置可以修改，但通常不必这么做，尤其是在刚开始学习的时候。</li></ul><h2 id="三、Flask与Django的比较"><a href="#三、Flask与Django的比较" class="headerlink" title="三、Flask与Django的比较"></a>三、Flask与Django的比较</h2><h3 id="两个框架的区别"><a href="#两个框架的区别" class="headerlink" title="两个框架的区别"></a>两个框架的区别</h3><p>其实两者最主要的区别在于：Django功能大而全，Flask只包含基本的功能。</p><ul><li><p>Django采用<strong>一站式解决</strong>的思路，Django集成有模板、表单、路由、认证、基本的数据库管理等内建功能，开发者不用在选择应用的基础设施上花费大量的时间；</p></li><li><p>Django就像一个装潢好的房子（如下图），它提供了各种家具，直接入住即可；</p><img src="/2023/11/18/python/flask/flask-1-jie-shao/1.png" class></li><li><p>和Django不同，Flask只提供了<strong>最核心</strong>的功能，轻巧、简洁，通过定制第三方扩展来实现具体功能；</p></li><li><p>默认情况下，不包含数据库抽象、用户认证、表单认证、发邮件等其他web框架经常包括的功能；</p></li><li><p>Flask依赖用各种灵活的扩展（比如邮件Flask Mail，用户认证Flask Login，数据库Flask SQLAlchemy）来给web应用添加额外功能；</p></li><li><p>Flask就像一个没有装潢的毛坯房（如下图），用户需要自己选择各种家具才能入住。</p></li></ul><h2 id="四、新手入门推荐"><a href="#四、新手入门推荐" class="headerlink" title="四、新手入门推荐"></a>四、新手入门推荐</h2><ul><li>Flask是一个轻量级的web框架，只提供核心技术，较其他同类型框架更为轻便容易上手，适用于小型团队在短时间内就可以完成功能丰富的中小型网站。</li><li>与之相比，Django是一个重量级的web框架，内置许多常用的扩展，这些功能是由官方和社区共同维护的，其<strong>健壮性</strong>高，有利于保障项目质量。</li><li>推荐新手学习Flask框架，可以先从Flask开始，后使用Django重构，因为如果直接上Django，作为新手，面对Django内置各种繁杂功能产生很多疑惑。</li><li>就如同搭积木，如果直接给你一个搭好的模型，再拆开后（逆向过程），让你指出每块积木的作用，你可能会有疑惑。但是让你亲自一步步去搭好后（正向过程），再去拆解模型，你对每块积木的都会有不错的了解。</li><li>Flask开发就像是这个正向过程，自己一步一步去集成想要的扩展，完善网站，每一步都亲自动手做一遍，有助于理解web开发的很多概念。</li><li>Django开发就像是逆向过程，Django已经帮我们集成了许多常用的扩展，用户要做的就是去学习这些扩展的使用。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> Flask </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> Flask </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI-13：详解Fields</title>
      <link href="/2023/11/17/python/fastapi/fastapi-13-xiang-jie-fields/"/>
      <url>/2023/11/17/python/fastapi/fastapi-13-xiang-jie-fields/</url>
      
        <content type="html"><![CDATA[<h1 id="FastAPI-13：详解Fields"><a href="#FastAPI-13：详解Fields" class="headerlink" title="FastAPI-13：详解Fields"></a>FastAPI-13：详解Fields</h1><h2 id="针对Pydantic-Model内部字段添加额外校验和元数据"><a href="#针对Pydantic-Model内部字段添加额外校验和元数据" class="headerlink" title="针对Pydantic Model内部字段添加额外校验和元数据"></a>针对Pydantic Model内部字段添加额外校验和元数据</h2><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>前面讲了Query、Path、Body，均可以对某个字段进行额外的校验和添加元数据；</li><li>这一篇来讲Fields，它针对 Pydantic Model 内部字段进行额外的校验和添加元数据。</li></ul><h2 id="Fields"><a href="#Fields" class="headerlink" title="Fields"></a>Fields</h2><ul><li>它是Pydantic提供的方法，并不是 FastAPI 提供的哦；</li><li>该方法返回了一个实例对象，是 Pydantic 中 FieldInfo 类的实例对象。</li></ul><img src="/2023/11/17/python/fastapi/fastapi-13-xiang-jie-fields/FastAPI-13%EF%BC%9A%E8%AF%A6%E8%A7%A3Fields-1.png" class><h3 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h3><p>FastAPI提供的Query、Path等其他公共Param类和Body类，都是Pydantic的FieldInfo类的子类</p><img src="/2023/11/17/python/fastapi/fastapi-13-xiang-jie-fields/FastAPI-13%EF%BC%9A%E8%AF%A6%E8%A7%A3Fields-2.png" class><img src="/2023/11/17/python/fastapi/fastapi-13-xiang-jie-fields/FastAPI-13%EF%BC%9A%E8%AF%A6%E8%A7%A3Fields-3.png" class><img src="/2023/11/17/python/fastapi/fastapi-13-xiang-jie-fields/FastAPI-13%EF%BC%9A%E8%AF%A6%E8%A7%A3Fields-4.png" class><p>Query、Path继承Param、Param继承FieldInfo</p><img src="/2023/11/17/python/fastapi/fastapi-13-xiang-jie-fields/FastAPI-13%EF%BC%9A%E8%AF%A6%E8%A7%A3Fields-5.png" class><p>Body直接继承FieldInfo</p><h3 id="简单的栗子"><a href="#简单的栗子" class="headerlink" title="简单的栗子"></a>简单的栗子</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional<span class="token keyword">import</span> uvicorn<span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI<span class="token punctuation">,</span> Body<span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel<span class="token punctuation">,</span> Fieldapp <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>    name<span class="token punctuation">:</span> <span class="token builtin">str</span>    description<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Field<span class="token punctuation">(</span>        default<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>        title<span class="token operator">=</span><span class="token string">"标题"</span><span class="token punctuation">,</span>        description<span class="token operator">=</span><span class="token string">"The description of the item"</span><span class="token punctuation">,</span>        max_length<span class="token operator">=</span><span class="token number">15</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span>    price<span class="token punctuation">:</span> <span class="token builtin">float</span> <span class="token operator">=</span> Field<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> ge<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">"需要大于0"</span><span class="token punctuation">)</span>    tax<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">"/items/{item_id}"</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">update_item</span><span class="token punctuation">(</span>        item_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>        item<span class="token punctuation">:</span> Item <span class="token operator">=</span> Body<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> embed<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    results <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"item_id"</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token string">"item"</span><span class="token punctuation">:</span> item<span class="token punctuation">}</span>    <span class="token keyword">return</span> results<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token operator">=</span><span class="token string">'eleventh-11:app'</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="正确传递参数的请求结果："><a href="#正确传递参数的请求结果：" class="headerlink" title="正确传递参数的请求结果："></a>正确传递参数的请求结果：</h4><img src="/2023/11/17/python/fastapi/fastapi-13-xiang-jie-fields/FastAPI-13%EF%BC%9A%E8%AF%A6%E8%A7%A3Fields-6.png" class><h4 id="查看-Swagger-API-文档："><a href="#查看-Swagger-API-文档：" class="headerlink" title="查看 Swagger API 文档："></a>查看 <code>Swagger API</code> 文档：</h4><img src="/2023/11/17/python/fastapi/fastapi-13-xiang-jie-fields/FastAPI-13%EF%BC%9A%E8%AF%A6%E8%A7%A3Fields-7.png" class><p>JSON Schema对加了 Fields 的字段会有详细的描述</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> FasAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> FastAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI-12：重名Pydantic Model会导致OpenAPI报错</title>
      <link href="/2023/11/16/python/fastapi/fastapi-12-chong-ming-pydantic-model-hui-dao-zhi-openapi-bao-cuo/"/>
      <url>/2023/11/16/python/fastapi/fastapi-12-chong-ming-pydantic-model-hui-dao-zhi-openapi-bao-cuo/</url>
      
        <content type="html"><![CDATA[<h1 id="FastAPI-12：重名Pydantic-Model会导致OpenAPI报错"><a href="#FastAPI-12：重名Pydantic-Model会导致OpenAPI报错" class="headerlink" title="FastAPI-12：重名Pydantic Model会导致OpenAPI报错"></a>FastAPI-12：重名Pydantic Model会导致OpenAPI报错</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>在一个 Python 模块中，如果包含两个同名的 Pydantic Model，访问 /docs 会报错哦！！！</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional<span class="token keyword">import</span> uvicorn<span class="token keyword">from</span> fastapi <span class="token keyword">import</span> Body<span class="token punctuation">,</span> FastAPI<span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModelapp <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>    name<span class="token punctuation">:</span> <span class="token builtin">str</span>    description<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>    price<span class="token punctuation">:</span> <span class="token builtin">float</span>    tax<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>    it<span class="token punctuation">:</span> <span class="token builtin">str</span>    address<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token operator">=</span><span class="token string">'tenth-10:app'</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="IDE就提示了"><a href="#IDE就提示了" class="headerlink" title="IDE就提示了"></a>IDE就提示了</h4><img src="/2023/11/16/python/fastapi/fastapi-12-chong-ming-pydantic-model-hui-dao-zhi-openapi-bao-cuo/FastAPI-12%EF%BC%9A%E9%87%8D%E5%90%8DPydantic%20Model%E4%BC%9A%E5%AF%BC%E8%87%B4OpenAPI%E6%8A%A5%E9%94%99-1.png" class><h4 id="启动uvicorn，并访问-docs："><a href="#启动uvicorn，并访问-docs：" class="headerlink" title="启动uvicorn，并访问 /docs："></a>启动uvicorn，并访问 /docs：</h4><img src="/2023/11/16/python/fastapi/fastapi-12-chong-ming-pydantic-model-hui-dao-zhi-openapi-bao-cuo/FastAPI-12%EF%BC%9A%E9%87%8D%E5%90%8DPydantic%20Model%E4%BC%9A%E5%AF%BC%E8%87%B4OpenAPI%E6%8A%A5%E9%94%99-2.png" class><p>**注意啦！一个 Python 模块中不要有重名的 Pydantic Model 哦！！ **</p><p>**注意啦！一个 Python 模块中不要有重名的 Pydantic Model 哦！！ **</p><p>**注意啦！一个 Python 模块中不要有重名的 Pydantic Model 哦！！ **</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> FasAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> FastAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI-11：函数参数类型是list参数</title>
      <link href="/2023/11/15/python/fastapi/fastapi-11-han-shu-can-shu-lei-xing-shi-list-can-shu/"/>
      <url>/2023/11/15/python/fastapi/fastapi-11-han-shu-can-shu-lei-xing-shi-list-can-shu/</url>
      
        <content type="html"><![CDATA[<h1 id="FastAPI-11：函数参数类型是list参数"><a href="#FastAPI-11：函数参数类型是list参数" class="headerlink" title="FastAPI-11：函数参数类型是list参数"></a>FastAPI-11：函数参数类型是list参数</h1><h2 id="函数参数类型是列表，但不使用typing中的list，而使用list，会怎样？"><a href="#函数参数类型是列表，但不使用typing中的list，而使用list，会怎样？" class="headerlink" title="函数参数类型是列表，但不使用typing中的list，而使用list，会怎样？"></a>函数参数类型是列表，但不使用typing中的list，而使用list，会怎样？</h2><h3 id="使用typing中的List、Set、Tuple的栗子"><a href="#使用typing中的List、Set、Tuple的栗子" class="headerlink" title="使用typing中的List、Set、Tuple的栗子"></a>使用typing中的List、Set、Tuple的栗子</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional<span class="token punctuation">,</span> List<span class="token punctuation">,</span> Tuple<span class="token punctuation">,</span> Set<span class="token keyword">import</span> uvicorn<span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI<span class="token punctuation">,</span> Bodyapp <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">'/items/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">update_item</span><span class="token punctuation">(</span>    list_<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span> <span class="token operator">=</span> Body<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    tuple_<span class="token punctuation">:</span> Tuple<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span> <span class="token operator">=</span> Body<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    set_<span class="token punctuation">:</span> Set<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span> <span class="token operator">=</span> Body<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    results <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'list_'</span><span class="token punctuation">:</span> list_<span class="token punctuation">,</span> <span class="token string">'tuple_'</span><span class="token punctuation">:</span> tuple_<span class="token punctuation">,</span> <span class="token string">'set_'</span><span class="token punctuation">:</span> set_<span class="token punctuation">}</span>    <span class="token keyword">return</span> results<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token operator">=</span><span class="token string">'ninth-9:app'</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="假设里面的元素传了非int且无法自动转换成int："><a href="#假设里面的元素传了非int且无法自动转换成int：" class="headerlink" title="假设里面的元素传了非int且无法自动转换成int："></a>假设里面的元素传了非int且无法自动转换成int：</h4><ul><li>typing的List、Set、Tuple都会指定里面参数的数据类型；</li><li>而FastAPI会对声明了数据类型的数据进行数据校验，所以会针对序列里面的参数进行数据校验；</li><li>如果校验失败，会报一个友好的提示。</li></ul><img src="/2023/11/15/python/fastapi/fastapi-11-han-shu-can-shu-lei-xing-shi-list-can-shu/FastAPI-11%EF%BC%9A%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E6%98%AFlist%E5%8F%82%E6%95%B0-1.png" class><h3 id="使用list、set、tuple的栗子"><a href="#使用list、set、tuple的栗子" class="headerlink" title="使用list、set、tuple的栗子"></a>使用list、set、tuple的栗子</h3><p>用Python自带的list、set、tuple类，是无法指定序列里面参数的数据类型，所以FastAPI并不会针对里面的参数进行数据校验</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">'/item/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">update_item</span><span class="token punctuation">(</span>    list_<span class="token punctuation">:</span> <span class="token builtin">list</span> <span class="token operator">=</span> Body<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    tuple_<span class="token punctuation">:</span> <span class="token builtin">tuple</span> <span class="token operator">=</span> Body<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    set_<span class="token punctuation">:</span> <span class="token builtin">set</span> <span class="token operator">=</span> Body<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    results <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'list_'</span><span class="token punctuation">:</span> list_<span class="token punctuation">,</span> <span class="token string">'tuple_'</span><span class="token punctuation">:</span> tuple_<span class="token punctuation">,</span> <span class="token string">'set_'</span><span class="token punctuation">:</span> set_<span class="token punctuation">}</span>    <span class="token keyword">return</span> results<span class="token comment"># 这样就变成了传啥类型的值都可以了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="示例："><a href="#示例：" class="headerlink" title="示例："></a>示例：</h4><img src="/2023/11/15/python/fastapi/fastapi-11-han-shu-can-shu-lei-xing-shi-list-can-shu/FastAPI-11%EF%BC%9A%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E7%B1%BB%E5%9E%8B%E6%98%AFlist%E5%8F%82%E6%95%B0-2.png" class><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>要充分利用FastAPI的优势，强烈建议使用typing的List、Set、Tuple来表示列表、集合、元祖类型。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> FasAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> FastAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI-10：详解Body</title>
      <link href="/2023/11/14/python/fastapi/fastapi-10-xiang-jie-body/"/>
      <url>/2023/11/14/python/fastapi/fastapi-10-xiang-jie-body/</url>
      
        <content type="html"><![CDATA[<h1 id="FastAPI-10：详解Body"><a href="#FastAPI-10：详解Body" class="headerlink" title="FastAPI-10：详解Body"></a>FastAPI-10：详解Body</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>上一篇有讲到将参数类型指定为<code>Pydantic Model</code>，这样FastAPI会解析它为一个Request Body；</li><li>那单类型（int、float、str、bool…）参数可以成为Request Body的一部分吗？答案显然是肯定的；</li><li>通过Body函数即可完成，和Path、Query有异曲同工之妙。</li></ul><h2 id="Body"><a href="#Body" class="headerlink" title="Body"></a>Body</h2><ul><li>主要作用：可以将但类型的参数成为Request Body的一部分，即从查询参数变成请求体参数；</li><li>和Query、Path提供的额外校验、元数据是基本一致的（多了个embed参数，最后详解）。</li></ul><img src="/2023/11/14/python/fastapi/fastapi-10-xiang-jie-body/FastAPI-10%EF%BC%9A%E8%AF%A6%E8%A7%A3Body-1.png" class><h3 id="Body的简单栗子"><a href="#Body的简单栗子" class="headerlink" title="Body的简单栗子"></a>Body的简单栗子</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional<span class="token keyword">import</span> uvicorn<span class="token keyword">from</span> fastapi <span class="token keyword">import</span> Body<span class="token punctuation">,</span> FastAPI<span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModelapp <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>    name<span class="token punctuation">:</span> <span class="token builtin">str</span>    description<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>    price<span class="token punctuation">:</span> <span class="token builtin">float</span>    tax<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>    username<span class="token punctuation">:</span> <span class="token builtin">str</span>    full_name<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">'/items/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">update_item</span><span class="token punctuation">(</span>    item_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>    item<span class="token punctuation">:</span> Item<span class="token punctuation">,</span>    user<span class="token punctuation">:</span> User<span class="token punctuation">,</span>    importance<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Body<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    results <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token string">'item'</span><span class="token punctuation">:</span> item<span class="token punctuation">,</span> <span class="token string">'user'</span><span class="token punctuation">:</span> user<span class="token punctuation">,</span> <span class="token string">'importance'</span><span class="token punctuation">:</span> importance<span class="token punctuation">}</span>    <span class="token keyword">return</span> results<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token operator">=</span><span class="token string">'eighth-8:app'</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="正确传参的请求结果："><a href="#正确传参的请求结果：" class="headerlink" title="正确传参的请求结果："></a>正确传参的请求结果：</h4><img src="/2023/11/14/python/fastapi/fastapi-10-xiang-jie-body/FastAPI-10%EF%BC%9A%E8%AF%A6%E8%A7%A3Body-2.png" class><p><strong>传递的参数中多了importance参数</strong></p><h4 id="查看Swagger-API-文档："><a href="#查看Swagger-API-文档：" class="headerlink" title="查看Swagger API 文档："></a>查看<code>Swagger API</code> 文档：</h4><img src="/2023/11/14/python/fastapi/fastapi-10-xiang-jie-body/FastAPI-10%EF%BC%9A%E8%AF%A6%E8%A7%A3Body-3.png" class><h3 id="Query、Path、Body终极混用"><a href="#Query、Path、Body终极混用" class="headerlink" title="Query、Path、Body终极混用"></a>Query、Path、Body终极混用</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> Path<span class="token punctuation">,</span> Query<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">"/item_all/{item_id}"</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">update_item</span><span class="token punctuation">(</span>        <span class="token operator">*</span><span class="token punctuation">,</span>        item_id<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Path<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">"路径参数"</span><span class="token punctuation">,</span> gt<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> lt<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        address<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">"查询参数"</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        item<span class="token punctuation">:</span> Item<span class="token punctuation">,</span>        user<span class="token punctuation">:</span> User<span class="token punctuation">,</span>        importance<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Body<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">"请求体"</span><span class="token punctuation">,</span> ge<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> le<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    results <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">"item_id"</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span>        <span class="token string">"address"</span><span class="token punctuation">:</span> address<span class="token punctuation">,</span>        <span class="token string">"item"</span><span class="token punctuation">:</span> item<span class="token punctuation">,</span>        <span class="token string">"user"</span><span class="token punctuation">:</span> user<span class="token punctuation">,</span>        <span class="token string">"importance"</span><span class="token punctuation">:</span> importance    <span class="token punctuation">}</span>    <span class="token keyword">return</span> results<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="正确传参的结果："><a href="#正确传参的结果：" class="headerlink" title="正确传参的结果："></a>正确传参的结果：</h4><img src="/2023/11/14/python/fastapi/fastapi-10-xiang-jie-body/FastAPI-10%EF%BC%9A%E8%AF%A6%E8%A7%A3Body-4.png" class><h4 id="查看Swagger-API文档："><a href="#查看Swagger-API文档：" class="headerlink" title="查看Swagger API文档："></a>查看<code>Swagger API</code>文档：</h4><img src="/2023/11/14/python/fastapi/fastapi-10-xiang-jie-body/FastAPI-10%EF%BC%9A%E8%AF%A6%E8%A7%A3Body-5.png" class><h3 id="Body设置的元数据会在JSON-Schema中体现"><a href="#Body设置的元数据会在JSON-Schema中体现" class="headerlink" title="Body设置的元数据会在JSON Schema中体现"></a>Body设置的元数据会在JSON Schema中体现</h3><img src="/2023/11/14/python/fastapi/fastapi-10-xiang-jie-body/FastAPI-10%EF%BC%9A%E8%AF%A6%E8%A7%A3Body-6.png" class><h2 id="Body-中的embed参数"><a href="#Body-中的embed参数" class="headerlink" title="Body()中的embed参数"></a>Body()中的<code>embed</code>参数</h2><h3 id="为什么要讲这个embed参数"><a href="#为什么要讲这个embed参数" class="headerlink" title="为什么要讲这个embed参数"></a>为什么要讲这个<code>embed</code>参数</h3><p>当函数只有一个参数指定了Pydantic Model且没有其他Body传参时，传参的时候请求体可以不指定参数名</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">'/item/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">update_item</span><span class="token punctuation">(</span>    item_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>    item<span class="token punctuation">:</span> Item<span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token string">'item'</span><span class="token punctuation">:</span> Item<span class="token punctuation">}</span><span class="token comment"># 默认并不需要指定item为字段名</span><span class="token comment"># 如果想要指定item为请求体的字段名，就是通过embed参数达到目的了</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">"/items/{item_id}"</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">update_item</span><span class="token punctuation">(</span>        <span class="token operator">*</span><span class="token punctuation">,</span>        item_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>        <span class="token comment"># 将 embed 设置为 True</span>        item<span class="token punctuation">:</span> Item <span class="token operator">=</span> Body<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> embed<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    results <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">"item_id"</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token string">"item"</span><span class="token punctuation">:</span> item<span class="token punctuation">}</span>    <span class="token keyword">return</span> results<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="正确传参的请求结果：-1"><a href="#正确传参的请求结果：-1" class="headerlink" title="正确传参的请求结果："></a>正确传参的请求结果：</h4><img src="/2023/11/14/python/fastapi/fastapi-10-xiang-jie-body/FastAPI-10%EF%BC%9A%E8%AF%A6%E8%A7%A3Body-7.png" class><h4 id="不传item字段的请求结果："><a href="#不传item字段的请求结果：" class="headerlink" title="不传item字段的请求结果："></a>不传item字段的请求结果：</h4><img src="/2023/11/14/python/fastapi/fastapi-10-xiang-jie-body/FastAPI-10%EF%BC%9A%E8%AF%A6%E8%A7%A3Body-8.png" class><h4 id="查看-Swagger-API-文档："><a href="#查看-Swagger-API-文档：" class="headerlink" title="查看 Swagger API 文档："></a>查看 <code>Swagger API</code> 文档：</h4><img src="/2023/11/14/python/fastapi/fastapi-10-xiang-jie-body/FastAPI-10%EF%BC%9A%E8%AF%A6%E8%A7%A3Body-9.png" class>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> FasAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> FastAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI-9：多个Request Body</title>
      <link href="/2023/11/13/python/fastapi/fastapi-9-duo-ge-request-body/"/>
      <url>/2023/11/13/python/fastapi/fastapi-9-duo-ge-request-body/</url>
      
        <content type="html"><![CDATA[<h1 id="FastAPI-9：多个Request-Body"><a href="#FastAPI-9：多个Request-Body" class="headerlink" title="FastAPI-9：多个Request Body"></a>FastAPI-9：多个Request Body</h1><h2 id="Path、Query、Request-Body混合使用"><a href="#Path、Query、Request-Body混合使用" class="headerlink" title="Path、Query、Request Body混合使用"></a>Path、Query、Request Body混合使用</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI<span class="token punctuation">,</span> Path<span class="token punctuation">,</span> Query<span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional<span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel<span class="token keyword">import</span> uvicorn app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>    name<span class="token punctuation">:</span> <span class="token builtin">str</span>    description<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>    price<span class="token punctuation">:</span> <span class="token builtin">float</span>    tax<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">'/items/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">update_item</span><span class="token punctuation">(</span>    <span class="token operator">*</span><span class="token punctuation">,</span>    item_id<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Path<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">'item_id'</span><span class="token punctuation">,</span> gt<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> lt<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> example<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    name<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">'查询参数'</span><span class="token punctuation">,</span> min_length<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">,</span> example<span class="token operator">=</span><span class="token string">'示例值'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    item<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>Item<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    results <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">}</span>    <span class="token keyword">if</span> name<span class="token punctuation">:</span>        results<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> item<span class="token punctuation">:</span>        results<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'item'</span><span class="token punctuation">:</span> item<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> results<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">,</span> <span class="token builtin">reload</span><span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment"># 除了路径参数item_id是必传的，查询参数name和请求体item都是可选非必传</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="只传路径参数的请求结果："><a href="#只传路径参数的请求结果：" class="headerlink" title="只传路径参数的请求结果："></a>只传路径参数的请求结果：</h4><img src="/2023/11/13/python/fastapi/fastapi-9-duo-ge-request-body/FastAPI-9%EF%BC%9A%E5%A4%9A%E4%B8%AARequest%20Body-1.png" class><h4 id="路径参数、查询参数、请求体均传递的请求结果："><a href="#路径参数、查询参数、请求体均传递的请求结果：" class="headerlink" title="路径参数、查询参数、请求体均传递的请求结果："></a>路径参数、查询参数、请求体均传递的请求结果：</h4><img src="/2023/11/13/python/fastapi/fastapi-9-duo-ge-request-body/FastAPI-9%EF%BC%9A%E5%A4%9A%E4%B8%AARequest%20Body-2.png" class><h4 id="查看-Swagger-API-文档："><a href="#查看-Swagger-API-文档：" class="headerlink" title="查看 Swagger API 文档："></a>查看 <code>Swagger API</code> 文档：</h4><img src="/2023/11/13/python/fastapi/fastapi-9-duo-ge-request-body/FastAPI-9%EF%BC%9A%E5%A4%9A%E4%B8%AARequest%20Body-3.png" class><h2 id="多个-Request-Body"><a href="#多个-Request-Body" class="headerlink" title="多个 Request Body"></a>多个 Request Body</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 自定义第2个模型类</span><span class="token keyword">class</span> <span class="token class-name">User</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>    username<span class="token punctuation">:</span> <span class="token builtin">str</span>    full_name<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>put</span><span class="token punctuation">(</span><span class="token string">'/item/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">update_item</span><span class="token punctuation">(</span>    item_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>    item<span class="token punctuation">:</span> Item<span class="token punctuation">,</span>  <span class="token comment"># 指定第一个 Model 类型</span>    user<span class="token punctuation">:</span> User<span class="token punctuation">,</span>  <span class="token comment"># 指定第二个 Model 类型</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    results <span class="token operator">=</span> <span class="token punctuation">{</span>        <span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span>        <span class="token string">'item'</span><span class="token punctuation">:</span> item<span class="token punctuation">,</span>        <span class="token string">'user'</span><span class="token punctuation">:</span> user    <span class="token punctuation">}</span>    <span class="token keyword">return</span> results<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>这种情况下，FastAPI会注意到函数中有两个 <code>Request Body</code>，因为这 <code>item、name</code> 两个参数都指定了 <code>Pydantic</code> 模型；</li><li>FastAPI将使用参数名作为 <code>Request Body</code> 中的键（字段名称）。</li></ul><h4 id="正确传参的结果："><a href="#正确传参的结果：" class="headerlink" title="正确传参的结果："></a>正确传参的结果：</h4><img src="/2023/11/13/python/fastapi/fastapi-9-duo-ge-request-body/FastAPI-9%EF%BC%9A%E5%A4%9A%E4%B8%AARequest%20Body-4.png" class><h4 id="查看-Swagger-API-文档：-1"><a href="#查看-Swagger-API-文档：-1" class="headerlink" title="查看 Swagger API 文档："></a>查看 <code>Swagger API</code> 文档：</h4><img src="/2023/11/13/python/fastapi/fastapi-9-duo-ge-request-body/FastAPI-9%EF%BC%9A%E5%A4%9A%E4%B8%AARequest%20Body-5.png" class>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> FasAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> FastAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI-8：请求体Request Body</title>
      <link href="/2023/11/12/python/fastapi/fastapi-8-qing-qiu-ti-request-body/"/>
      <url>/2023/11/12/python/fastapi/fastapi-8-qing-qiu-ti-request-body/</url>
      
        <content type="html"><![CDATA[<h1 id="FastAPI-8：请求体Request-Body"><a href="#FastAPI-8：请求体Request-Body" class="headerlink" title="FastAPI-8：请求体Request Body"></a>FastAPI-8：请求体Request Body</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>接口传参方式之一：通过发送请求体（Request Body）来传递请求数据；</li><li>在FastAPI，提倡使用 <code>Pydantic</code> 模型来定义请求体；</li><li>这篇文章会详细讲不使用 <code>Pydantic</code> 和 使用 <code>Pydantic</code> 发送请求体的栗子。</li></ul><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><ul><li>请求体并不是只有 <code>POST</code> 请求有，只不过POST更常见；</li><li>在 <code>PUT</code> 、<code>DELETE</code> 、<code>PATCH</code> 请求中都可以使用请求体；</li><li>其实，在 <code>GET</code> 请求中也可以使用请求体，不过仅适用于非常极端的情况下，<strong>而且 <code>Swagger API</code> 并不会显示 <code>GET</code> 请求的请求体</strong> 。</li></ul><h2 id="不使用Pydantic的栗子"><a href="#不使用Pydantic的栗子" class="headerlink" title="不使用Pydantic的栗子"></a>不使用Pydantic的栗子</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI<span class="token keyword">import</span> uvicornapp <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">'/items'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_item</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> <span class="token builtin">dict</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'item'</span><span class="token punctuation">:</span> item<span class="token punctuation">}</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token operator">=</span><span class="token string">'sixth-6:app'</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment"># 指定查询参数的类型为dice</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="正确传参的结果："><a href="#正确传参的结果：" class="headerlink" title="正确传参的结果："></a>正确传参的结果：</h4><img src="/2023/11/12/python/fastapi/fastapi-8-qing-qiu-ti-request-body/FastAPI-8%EF%BC%9A%E8%AF%B7%E6%B1%82%E4%BD%93Request%20Body-1.png" class><h3 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h3><ul><li>用 <code>postman</code> 发起请求的话，一定要选 <code>JSON</code> 格式哦；</li><li>因为接收的是 <code>dict</code> ，所以 <code>FastAPI</code> 会自动将 <code>JSON</code> 字符串转换为 <code>dict</code>；</li><li>这种场景下，虽然查询参数叫 <code>item</code> ，但请求体的字段名可以随意取，字段数量也可以任意一个。</li></ul><h2 id="用Dict代替dict的栗子"><a href="#用Dict代替dict的栗子" class="headerlink" title="用Dict代替dict的栗子"></a>用Dict代替dict的栗子</h2><p>Dict 是 typing 模块提供的类，可以指定键值对的数据类型。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> typing <span class="token keyword">import</span> Dict<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">"/Dict/"</span><span class="token punctuation">)</span><span class="token comment"># 键为str，值为float</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">create_index_weights</span><span class="token punctuation">(</span>weights<span class="token punctuation">:</span> Dict<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">,</span> <span class="token builtin">float</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> weights<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用-Dict-相比直接使用-dict-的好处"><a href="#使用-Dict-相比直接使用-dict-的好处" class="headerlink" title="使用 Dict 相比直接使用 dict 的好处"></a>使用 <code>Dict</code> 相比直接使用 <code>dict</code> 的好处</h3><p>声明为 <code>Dict[str, float]</code> ,FastAPI 会对每一个键值对都做数据校验，校验失败会有友好的错误提示。</p><h4 id="正确传参的请求结果："><a href="#正确传参的请求结果：" class="headerlink" title="正确传参的请求结果："></a>正确传参的请求结果：</h4><img src="/2023/11/12/python/fastapi/fastapi-8-qing-qiu-ti-request-body/FastAPI-8%EF%BC%9A%E8%AF%B7%E6%B1%82%E4%BD%93Request%20Body-2.png" class><h4 id="校验失败的请求结果："><a href="#校验失败的请求结果：" class="headerlink" title="校验失败的请求结果："></a>校验失败的请求结果：</h4><img src="/2023/11/12/python/fastapi/fastapi-8-qing-qiu-ti-request-body/FastAPI-8%EF%BC%9A%E8%AF%B7%E6%B1%82%E4%BD%93Request%20Body-3.png" class><h2 id="使用-Pydantic-模型（建议使用）"><a href="#使用-Pydantic-模型（建议使用）" class="headerlink" title="使用 Pydantic 模型（建议使用）"></a>使用 <code>Pydantic</code> 模型（建议使用）</h2><h3 id="实际栗子"><a href="#实际栗子" class="headerlink" title="实际栗子"></a>实际栗子</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional<span class="token keyword">from</span> pydantic <span class="token keyword">import</span> BaseModel<span class="token comment"># 自定义一个Pydantic</span><span class="token keyword">class</span> <span class="token class-name">Item</span><span class="token punctuation">(</span>BaseModel<span class="token punctuation">)</span><span class="token punctuation">:</span>    name<span class="token punctuation">:</span> strm    description<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>    price<span class="token punctuation">:</span> <span class="token builtin">float</span>    tax<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token comment"># item 参数的类型指定为 Item 模型</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">'/items/'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">create_item</span><span class="token punctuation">(</span>item<span class="token punctuation">:</span> Item<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="参数指定为-Pydantic-模型后，-FastAPI做了这几件事"><a href="#参数指定为-Pydantic-模型后，-FastAPI做了这几件事" class="headerlink" title="参数指定为 Pydantic 模型后， FastAPI做了这几件事"></a>参数指定为 <code>Pydantic</code> 模型后， FastAPI做了这几件事</h3><ol><li>将请求体识别为 <code>JSON</code> 字符串；</li><li>将字段值转换相应的类型（若需要）；</li><li>验证数据，如果验证失败，会返回一个清洗的错误，准确支出错误数据的位置和信息；</li><li><code>item</code> 会接收到完整的请求体数据，拥有所有属性及其类型，IDE也会给予对应的智能提示；</li><li>给 <code>Pydantic</code> 模型自动的生成 <code>JSON Schema</code> ，这些 <code>Schema</code> 会成为生成 <code>OpenAPI Schema</code> 的一部分，并显示在接口文档上。</li></ol><h4 id="正确传参的请求结果：-1"><a href="#正确传参的请求结果：-1" class="headerlink" title="正确传参的请求结果："></a>正确传参的请求结果：</h4><img src="/2023/11/12/python/fastapi/fastapi-8-qing-qiu-ti-request-body/FastAPI-8%EF%BC%9A%E8%AF%B7%E6%B1%82%E4%BD%93Request%20Body-4.png" class><p>正常传参，所有属性按指定的类型进行传数据</p><h3 id="字段类型自动转换"><a href="#字段类型自动转换" class="headerlink" title="字段类型自动转换"></a>字段类型自动转换</h3><ul><li><code>name: str</code> 传了bool类型的数据；</li><li><code>description: str</code> 传了float类型数据；</li><li><code>price: float</code> 传了int类型数据；</li><li><code>tax: float</code> 传了bool类型数据。</li></ul><h4 id="请求结果："><a href="#请求结果：" class="headerlink" title="请求结果："></a>请求结果：</h4><img src="/2023/11/12/python/fastapi/fastapi-8-qing-qiu-ti-request-body/FastAPI-8%EF%BC%9A%E8%AF%B7%E6%B1%82%E4%BD%93Request%20Body-5.png" class><p>FastAPi 会将传进来的值自动转换为指定类型的值</p><ul><li>将 true 转成 str 类型，即 “True”</li><li>将 12.22 转成 str 类型，即 “12.22”</li><li>将 12 转成 float 类型，即 12.0</li><li>将 true 转成 float 类型，即 1.0</li></ul><p>如果转换失败，则会报 <code>type_error</code> 错误（如图）</p><img src="/2023/11/12/python/fastapi/fastapi-8-qing-qiu-ti-request-body/FastAPI-8%EF%BC%9A%E8%AF%B7%E6%B1%82%E4%BD%93Request%20Body-6.png" class><h4 id="查看-Swagger-API-文档："><a href="#查看-Swagger-API-文档：" class="headerlink" title="查看 Swagger API 文档："></a>查看 <code>Swagger API</code> 文档：</h4><img src="/2023/11/12/python/fastapi/fastapi-8-qing-qiu-ti-request-body/FastAPI-8%EF%BC%9A%E8%AF%B7%E6%B1%82%E4%BD%93Request%20Body-7.png" class><p><code>model</code> 的 <code>JSON Schema</code> 会成为 <code>Swagger API</code> 文档的一部分</p><h4 id="IDE-智能提示"><a href="#IDE-智能提示" class="headerlink" title="IDE 智能提示"></a>IDE 智能提示</h4><p>因为知道name属性的类型是 str，所以IDE会智能提示str内置的方法</p><img src="/2023/11/12/python/fastapi/fastapi-8-qing-qiu-ti-request-body/FastAPI-8%EF%BC%9A%E8%AF%B7%E6%B1%82%E4%BD%93Request%20Body-8.png" class><h2 id="Request-Body-Path-Query-Parameters-综合栗子"><a href="#Request-Body-Path-Query-Parameters-综合栗子" class="headerlink" title="Request Body + Path + Query Parameters 综合栗子"></a>Request Body + Path + Query Parameters 综合栗子</h2><ul><li>可以同时声明请求体、路径参数、查询参数；</li><li>FastAPI可以识别出它们中的每一个，并从正确的位置获取到数据。</li></ul><h3 id="实际代码"><a href="#实际代码" class="headerlink" title="实际代码"></a>实际代码</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>post</span><span class="token punctuation">(</span><span class="token string">'/items/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">create_item</span><span class="token punctuation">(</span>    <span class="token comment"># 路径参数</span>    item_id<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span>    <span class="token comment"># 请求体，模型类型</span>    item<span class="token punctuation">:</span> Item<span class="token punctuation">,</span>    <span class="token comment"># 查询参数</span>    name<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token operator">**</span>item<span class="token punctuation">.</span>dice<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>    <span class="token keyword">if</span> name<span class="token punctuation">:</span>        <span class="token comment"># 如果查询参数 name 不为空，则替换掉 item 参数里面的 name 属性</span>        result<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="FastAPI识别参数的逻辑"><a href="#FastAPI识别参数的逻辑" class="headerlink" title="FastAPI识别参数的逻辑"></a>FastAPI识别参数的逻辑</h3><ul><li>如果参数也在路径中声明，它将解释为路径参数【item_id】；</li><li>如果参数是单数类型（如int、float、str、bool等），它将被解释为查询参数【name】；</li><li>如果参数被声明为Pydantic模型的类型，它将被解释为请求体参数【item】。</li></ul><h4 id="正确传参的请求结果：-2"><a href="#正确传参的请求结果：-2" class="headerlink" title="正确传参的请求结果："></a>正确传参的请求结果：</h4><img src="/2023/11/12/python/fastapi/fastapi-8-qing-qiu-ti-request-body/FastAPI-8%EF%BC%9A%E8%AF%B7%E6%B1%82%E4%BD%93Request%20Body-9.png" class><h4 id="Pycharm-Console输出结果："><a href="#Pycharm-Console输出结果：" class="headerlink" title="Pycharm Console输出结果："></a>Pycharm Console输出结果：</h4><img src="/2023/11/12/python/fastapi/fastapi-8-qing-qiu-ti-request-body/FastAPI-8%EF%BC%9A%E8%AF%B7%E6%B1%82%E4%BD%93Request%20Body-10.png" class><h4 id="查看-Swagger-API-文档：-1"><a href="#查看-Swagger-API-文档：-1" class="headerlink" title="查看 Swagger API 文档："></a>查看 <code>Swagger API</code> 文档：</h4><img src="/2023/11/12/python/fastapi/fastapi-8-qing-qiu-ti-request-body/FastAPI-8%EF%BC%9A%E8%AF%B7%E6%B1%82%E4%BD%93Request%20Body-11.png" class>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> FasAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> FastAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI-7：详解Path</title>
      <link href="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/"/>
      <url>/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/</url>
      
        <content type="html"><![CDATA[<h1 id="FastAPI-7：详解Path"><a href="#FastAPI-7：详解Path" class="headerlink" title="FastAPI-7：详解Path"></a>FastAPI-7：详解Path</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><ul><li>上一篇讲了可以为查询参数添加额外的校验和元数据，Query库；</li><li>这篇可以为路径查询添加额外的校验元数据，Path库。</li></ul><h2 id="Path"><a href="#Path" class="headerlink" title="Path"></a>Path</h2><p>可以为路径参数添加额外的校验和元数据，跟 <code>Query</code> 的参数是一毛一样的</p><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-1.png" class><h2 id="元数据"><a href="#元数据" class="headerlink" title="元数据"></a>元数据</h2><p>Path也可以添加元数据相关信息，这些信息将包含在生成的 <code>OpenAPI</code> 中，并由文档用户界面和外部工具使用</p><h3 id="四种元数据参数"><a href="#四种元数据参数" class="headerlink" title="四种元数据参数"></a>四种元数据参数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 别名</span>alias<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token comment"># 标题</span>title<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token comment"># 描述</span>description<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token comment"># 是否弃用</span>deprecated<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">bool</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="实际代码"><a href="#实际代码" class="headerlink" title="实际代码"></a>实际代码</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI<span class="token punctuation">,</span> Path<span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional<span class="token keyword">import</span> uvicornapp <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 元数据</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/items/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_items</span><span class="token punctuation">(</span>    item_id<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Path<span class="token punctuation">(</span>            default<span class="token operator">=</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span>            min_length<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span>            max_length<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>            regex<span class="token operator">=</span><span class="token string">'^刘.*星$'</span><span class="token punctuation">,</span>            title<span class="token operator">=</span><span class="token string">'Fuck'</span><span class="token punctuation">,</span>            description<span class="token operator">=</span><span class="token string">'很长很长的描述'</span><span class="token punctuation">,</span>            deprecated<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>        <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">}</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token operator">=</span><span class="token string">'fifth-5:app'</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="校验成功的请求结果："><a href="#校验成功的请求结果：" class="headerlink" title="校验成功的请求结果："></a>校验成功的请求结果：</h4><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-2.png" class><h4 id="校验失败的请求结果："><a href="#校验失败的请求结果：" class="headerlink" title="校验失败的请求结果："></a>校验失败的请求结果：</h4><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-3.png" class><h4 id="查看-Swagger-API-文档："><a href="#查看-Swagger-API-文档：" class="headerlink" title="查看 Swagger API 文档："></a>查看 <code>Swagger API</code> 文档：</h4><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-4.png" class><h3 id="重点"><a href="#重点" class="headerlink" title="重点"></a>重点</h3><ul><li>路径参数使用是必须的，必须是路径的一部分；</li><li>所以， <code>Path</code> 的 <code>default</code> 参数值必须设为 …</li></ul><h3 id="元数据不应该使用-alias"><a href="#元数据不应该使用-alias" class="headerlink" title="元数据不应该使用 alias"></a>元数据不应该使用 <code>alias</code></h3><p>因为路径参数并不能通过 <code>参数名=value</code> 的形式来传参，所以没有办法通过 <code>alias = value</code> 的方式给别名传值，最终会报错。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/alias/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_items</span><span class="token punctuation">(</span>    item_id<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Path<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> alias<span class="token operator">=</span><span class="token string">'item_alias'</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="请求结果："><a href="#请求结果：" class="headerlink" title="请求结果："></a>请求结果：</h4><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-5.png" class><h4 id="不使用别名："><a href="#不使用别名：" class="headerlink" title="不使用别名："></a>不使用别名：</h4><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-6.png" class><h4 id="查看-Swagger-API-文档，并运行："><a href="#查看-Swagger-API-文档，并运行：" class="headerlink" title="查看 Swagger API 文档，并运行："></a>查看 <code>Swagger API</code> 文档，并运行：</h4><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-7.png" class><p>直接在 <code>Swagger API</code> 文档上尝试运行也会报错，所以路径参数不要使用别名参数哦！！！</p><h3 id="函数参数排序问题"><a href="#函数参数排序问题" class="headerlink" title="函数参数排序问题"></a>函数参数排序问题</h3><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-8.png" class><p>Python会将 <code>item_id: Option[str] = Path(...)</code> 识别为默认参数，而 <code>name: str</code> 是位置参数，而位置参数不能在默认参数后面，所以报红了。</p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/item/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_items</span><span class="token punctuation">(</span>    <span class="token operator">*</span><span class="token punctuation">,</span>    item_id<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Path<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    name<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">}</span><span class="token comment"># 将 * 作为第一个参数，那么 * 后面的所有参数都会当做关键字参数处理，即使它们没有设置默认值（像name）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="正常传参的结果："><a href="#正常传参的结果：" class="headerlink" title="正常传参的结果："></a>正常传参的结果：</h4><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-9.png" class><h2 id="数字类型校验"><a href="#数字类型校验" class="headerlink" title="数字类型校验"></a>数字类型校验</h2><p><code>Query</code> 和 <code>Path</code> 都可以添加数字校验，<code>Query</code> 文章并没有讲解数字校验，所以这里重点讲一下！！！</p><h3 id="数字校验参数"><a href="#数字校验参数" class="headerlink" title="数字校验参数"></a>数字校验参数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 大于</span>gt<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token comment"># 大于等于</span>ge<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token comment"># 小于</span>lt<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token comment"># 小于等于</span>le<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">float</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="实际代码-1"><a href="#实际代码-1" class="headerlink" title="实际代码"></a>实际代码</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/number/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_items</span><span class="token punctuation">(</span>    <span class="token operator">*</span><span class="token punctuation">,</span>    item_id<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span> <span class="token operator">=</span> Path<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> title<span class="token operator">=</span><span class="token string">'The ID'</span><span class="token punctuation">,</span> gt<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> le<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    name<span class="token punctuation">:</span> <span class="token builtin">str</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="校验成功的请求结果：-1"><a href="#校验成功的请求结果：-1" class="headerlink" title="校验成功的请求结果："></a>校验成功的请求结果：</h4><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-10.png" class><h4 id="校验失败的请求结果：-1"><a href="#校验失败的请求结果：-1" class="headerlink" title="校验失败的请求结果："></a>校验失败的请求结果：</h4><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-11.png" class><h2 id="Query-和-Path-综合使用"><a href="#Query-和-Path-综合使用" class="headerlink" title="Query 和 Path 综合使用"></a><code>Query</code> 和 <code>Path</code> 综合使用</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/path_query/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_items</span><span class="token punctuation">(</span>    <span class="token operator">*</span><span class="token punctuation">,</span>        item_id<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token operator">=</span> Path<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">'path'</span><span class="token punctuation">,</span> ge<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> lt<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> example<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>        name<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>        age<span class="token punctuation">:</span> <span class="token builtin">float</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> description<span class="token operator">=</span><span class="token string">'query'</span><span class="token punctuation">,</span> gt<span class="token operator">=</span><span class="token number">0.0</span><span class="token punctuation">,</span> le<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token string">'age'</span><span class="token punctuation">:</span> age<span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="正确传参的请求结果："><a href="#正确传参的请求结果：" class="headerlink" title="正确传参的请求结果："></a>正确传参的请求结果：</h4><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-12.png" class><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>数字校验也适用于 <code>float</code> 类型的值</p><h4 id="查看-Swagger-API-文档：-1"><a href="#查看-Swagger-API-文档：-1" class="headerlink" title="查看 Swagger API 文档："></a>查看 <code>Swagger API</code> 文档：</h4><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-13.png" class><p>这里的 <code>item_id</code> 还加了个 <code>example</code> 参数，就是个示例值，所以在接口文档中会显示 <code>Example</code></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li><code>Query</code> 、 <code>Path</code> 和后面会讲到的 <code>Form</code> 、 <code>Cookie</code> … 等等，都是公共的 <code>Param</code> 类的子类，但实际开发中并不会直接使用 <code>Param</code> 类；</li><li>所有这些子类都共享相同的额外校验参数和元数据。</li></ul><h3 id="Query-类"><a href="#Query-类" class="headerlink" title="Query 类"></a>Query 类</h3><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-14.png" class><h3 id="Path-类"><a href="#Path-类" class="headerlink" title="Path 类"></a>Path 类</h3><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-15.png" class><h3 id="Param-类"><a href="#Param-类" class="headerlink" title="Param 类"></a>Param 类</h3><img src="/2023/11/11/python/fastapi/fastapi-7-xiang-jie-path/FastAPI-7%EF%BC%9A%E8%AF%A6%E8%A7%A3Path-16.png" class>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> FasAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> FastAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI-6：Query库详解</title>
      <link href="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/"/>
      <url>/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/</url>
      
        <content type="html"><![CDATA[<h1 id="FastAPI-6：Query库详解"><a href="#FastAPI-6：Query库详解" class="headerlink" title="FastAPI-6：Query库详解"></a>FastAPI-6：Query库详解</h1><h3 id="可选参数"><a href="#可选参数" class="headerlink" title="可选参数"></a>可选参数</h3><p>上篇讲过查询参数可以不是必传的，可以是可选参数</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI<span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional<span class="token keyword">import</span> uvicorn app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 必传参数 + 可选参数</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/items'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_item</span><span class="token punctuation">(</span>    item_id<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>    name<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">}</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token operator">=</span><span class="token string">'fourth-4:app'</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment"># 可选其实也是一种校验</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="请求结果："><a href="#请求结果：" class="headerlink" title="请求结果："></a>请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-1.png" class><h2 id="Query"><a href="#Query" class="headerlink" title="Query"></a>Query</h2><p>为了对查询参数进行额外的校验，可以导入 <code>Query</code> 库</p><h2 id="Query支持多种校验"><a href="#Query支持多种校验" class="headerlink" title="Query支持多种校验"></a>Query支持多种校验</h2><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-2.png" class><h3 id="可选参数有默认值-长度最大为10"><a href="#可选参数有默认值-长度最大为10" class="headerlink" title="可选参数有默认值 + 长度最大为10"></a>可选参数有默认值 + 长度最大为10</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 需要先导入Query库</span><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> Query<span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/items/'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_items</span><span class="token punctuation">(</span>    name<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    results <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'items'</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> <span class="token string">'Foo'</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> <span class="token string">'Bar'</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span>    <span class="token keyword">if</span> name<span class="token punctuation">:</span>        results<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> results<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="不传-name-的请求结果："><a href="#不传-name-的请求结果：" class="headerlink" title="不传 name 的请求结果："></a>不传 <code>name</code> 的请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-3.png" class><h4 id="传入-name-校验成功的请求结果："><a href="#传入-name-校验成功的请求结果：" class="headerlink" title="传入 name 校验成功的请求结果："></a>传入 <code>name</code> 校验成功的请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-4.png" class><h4 id="name-长度大于10，校验失败的请求结果："><a href="#name-长度大于10，校验失败的请求结果：" class="headerlink" title="name 长度大于10，校验失败的请求结果："></a><code>name</code> 长度大于10，校验失败的请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-5.png" class><p><strong>友好的错误提示呀，直接说清楚哪个字段长度不满足了。。。</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">name<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token comment"># 等价于</span>name<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="Optional的作用"><a href="#Optional的作用" class="headerlink" title="Optional的作用"></a>Optional的作用</h2><p>为了让IDE更好的支持智能提示</p><h3 id="一个参数多个校验"><a href="#一个参数多个校验" class="headerlink" title="一个参数多个校验"></a>一个参数多个校验</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 多条校验</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/items/twice'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_items</span><span class="token punctuation">(</span>    name<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token string">'王德发'</span><span class="token punctuation">,</span> min_length<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="校验成功的请求结果："><a href="#校验成功的请求结果：" class="headerlink" title="校验成功的请求结果："></a>校验成功的请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-6.png" class><h4 id="name-长度小于3，校验失败的请求结果："><a href="#name-长度小于3，校验失败的请求结果：" class="headerlink" title="name 长度小于3，校验失败的请求结果："></a><code>name</code> 长度小于3，校验失败的请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-7.png" class><h3 id="添加正则表达式校验结果"><a href="#添加正则表达式校验结果" class="headerlink" title="添加正则表达式校验结果"></a>添加正则表达式校验结果</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 正则表达式</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/items/regular'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_items</span><span class="token punctuation">(</span>    name<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token string">'王德发'</span><span class="token punctuation">,</span> min_length<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span> regex<span class="token operator">=</span><span class="token string">'^刘.*星$'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="校验成功的请求结果：-1"><a href="#校验成功的请求结果：-1" class="headerlink" title="校验成功的请求结果："></a>校验成功的请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-8.png" class><h4 id="name-不满足正则，校验失败的请求结果："><a href="#name-不满足正则，校验失败的请求结果：" class="headerlink" title="name 不满足正则，校验失败的请求结果："></a><code>name</code> 不满足正则，校验失败的请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-9.png" class><h3 id="必传参数-长度最小为3"><a href="#必传参数-长度最小为3" class="headerlink" title="必传参数 + 长度最小为3"></a>必传参数 + 长度最小为3</h3><h4 id="不使用Query时，查询参数怎么必传？"><a href="#不使用Query时，查询参数怎么必传？" class="headerlink" title="不使用Query时，查询参数怎么必传？"></a>不使用Query时，查询参数怎么必传？</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 不指定默认值就可以</span>name<span class="token punctuation">:</span> <span class="token builtin">str</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="当使用Query时，查询参数怎么必传？"><a href="#当使用Query时，查询参数怎么必传？" class="headerlink" title="当使用Query时，查询参数怎么必传？"></a>当使用Query时，查询参数怎么必传？</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Query 默认值参数 default 是必传的，传了默认值不就变成可选参数了吗，那么怎么办呢？</span><span class="token comment"># 必传参数</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/items/require'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_items</span><span class="token punctuation">(</span>    name<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">,</span> min_length<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">}</span><span class="token comment"># 只需要将 `...` 赋值给default参数，FastAPI就会知道这个参数是必传的了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="校验成功的请求结果：-2"><a href="#校验成功的请求结果：-2" class="headerlink" title="校验成功的请求结果："></a>校验成功的请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-10.png" class><h4 id="没有传入-name-参数，校验失败的请求结果："><a href="#没有传入-name-参数，校验失败的请求结果：" class="headerlink" title="没有传入 name 参数，校验失败的请求结果："></a>没有传入 <code>name</code> 参数，校验失败的请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-11.png" class><p>因为是必传参数，所以不传报错！！！</p><h4 id="查看-Swagger-API-文档："><a href="#查看-Swagger-API-文档：" class="headerlink" title="查看 Swagger API 文档："></a>查看 <code>Swagger API</code> 文档：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-12.png" class><p><strong>大大的required标识，代表必传</strong></p><h2 id="List类型的查询参数"><a href="#List类型的查询参数" class="headerlink" title="List类型的查询参数"></a>List类型的查询参数</h2><p>使用 <code>Query</code> 时，可以指定查询参数的类型为 List，即一个参数可以接收多个值</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> typing <span class="token keyword">import</span> List<span class="token comment"># List[str]</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/list'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_item</span><span class="token punctuation">(</span>    address<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span> max_length<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'address'</span><span class="token punctuation">:</span> address<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="没有传值的请求结果："><a href="#没有传值的请求结果：" class="headerlink" title="没有传值的请求结果："></a>没有传值的请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-13.png" class><h4 id="正确传参的请求结果："><a href="#正确传参的请求结果：" class="headerlink" title="正确传参的请求结果："></a>正确传参的请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-1.png" class><p><strong>设置了校验 <code>max_length=2</code> ，但是传了4个address也正常，证明这个 <code>max_length</code> 的校验对数组的长度并不生效</strong></p><h4 id="校验失败的请求结果："><a href="#校验失败的请求结果：" class="headerlink" title="校验失败的请求结果："></a>校验失败的请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-15.png" class><p><strong><code>max_length</code> 校验任然会对数组里面的字符串生效</strong></p><h4 id="查看-Swagger-API-文档：-1"><a href="#查看-Swagger-API-文档：-1" class="headerlink" title="查看 Swagger API 文档："></a>查看 <code>Swagger API</code> 文档：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-16.png" class><h3 id="List类型的查询参数有多个默认值"><a href="#List类型的查询参数有多个默认值" class="headerlink" title="List类型的查询参数有多个默认值"></a>List类型的查询参数有多个默认值</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/list/default'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_item</span><span class="token punctuation">(</span>    address<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>default<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'北京'</span><span class="token punctuation">,</span> <span class="token string">'上海'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'address'</span><span class="token punctuation">:</span> address<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="不传参数的结果："><a href="#不传参数的结果：" class="headerlink" title="不传参数的结果："></a>不传参数的结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-17.png" class><h2 id="元数据"><a href="#元数据" class="headerlink" title="元数据"></a>元数据</h2><p>Query可以添加元数据相关信息，这些信息将包含在生成的OpenAPI中，并由文档用户界面和外部工具使用</p><h3 id="四种元数据参数"><a href="#四种元数据参数" class="headerlink" title="四种元数据参数"></a>四种元数据参数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 别名</span>alias<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token comment"># 标题</span>title<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token comment"># 描述</span>description Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token comment"># 是否弃用</span>deprecated<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">bool</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="实际代码"><a href="#实际代码" class="headerlink" title="实际代码"></a>实际代码</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 元数据</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/items/all'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_items</span><span class="token punctuation">(</span>    name<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> Query<span class="token punctuation">(</span>        default<span class="token operator">=</span><span class="token string">'王德发'</span><span class="token punctuation">,</span>            min_length<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span>            max_length<span class="token operator">=</span><span class="token number">10</span><span class="token punctuation">,</span>            regex<span class="token operator">=</span><span class="token string">'^刘.*星$'</span><span class="token punctuation">,</span>            alias<span class="token operator">=</span><span class="token string">'name_alias_query'</span><span class="token punctuation">,</span>            title<span class="token operator">=</span><span class="token string">'成功'</span><span class="token punctuation">,</span>            description<span class="token operator">=</span><span class="token string">'长得帅'</span><span class="token punctuation">,</span>            deprecated<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span>    <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="不使用-alias-进行传参的请求结果："><a href="#不使用-alias-进行传参的请求结果：" class="headerlink" title="不使用 alias 进行传参的请求结果："></a>不使用 <code>alias</code> 进行传参的请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-18.png" class><p>当做不存在的查询参数处理</p><h4 id="用-alias-进行传参的请求结果："><a href="#用-alias-进行传参的请求结果：" class="headerlink" title="用 alias 进行传参的请求结果："></a>用 <code>alias</code> 进行传参的请求结果：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-19.png" class><p><strong>定义了 <code>alias</code> ，记得要用 <code>alias</code> 进行传参</strong></p><h4 id="查看-Swagger-API-文档：-2"><a href="#查看-Swagger-API-文档：-2" class="headerlink" title="查看 Swagger API 文档："></a>查看 <code>Swagger API</code> 文档：</h4><img src="/2023/11/10/python/fastapi/fastapi-6-query-ku-xiang-jie/FastAPI-6%EF%BC%9AQuery%E5%BA%93%E8%AF%A6%E8%A7%A3-20.png" class><ul><li>title字段并不会显示在这里，只会显示在JSON Schema中；</li><li>而JSON Schema只有请求参数方式为Request Body才会显示，这里是查询参数，所以并没有JSON Schema这一说，后面会介绍！！！</li></ul><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>限定于字符串的校验：</p><ul><li>min_length</li><li>max_length</li><li>regex</li></ul><h3 id="Path"><a href="#Path" class="headerlink" title="Path"></a>Path</h3><p>除了可以给查询参数添加额外的校验，也可以给路径参数添加额外的校验</p><p>Path的具体教程： <a href="https://www.cnblogs.com/poloyy/p/15308131.html">https://www.cnblogs.com/poloyy/p/15308131.html</a> </p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> FasAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> FastAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI-5：查询参数Query Parameters</title>
      <link href="/2023/11/09/python/fastapi/fastapi-5-cha-xun-can-shu-query-parameters/"/>
      <url>/2023/11/09/python/fastapi/fastapi-5-cha-xun-can-shu-query-parameters/</url>
      
        <content type="html"><![CDATA[<h1 id="FastAPI-5：查询参数Query-Parameters"><a href="#FastAPI-5：查询参数Query-Parameters" class="headerlink" title="FastAPI-5：查询参数Query Parameters"></a>FastAPI-5：查询参数Query Parameters</h1><h2 id="什么是查询参数？"><a href="#什么是查询参数？" class="headerlink" title="什么是查询参数？"></a>什么是查询参数？</h2><p><a href="http://localhost:8080/get?name=xxx&amp;age=18">http://localhost:8080/get?name=xxx&amp;age=18</a></p><p><a href="http://localhost:8080/get?age=18&amp;name=xxx">http://localhost:8080/get?age=18&amp;name=xxx</a></p><p>在url的 <code>?</code>  后面跟着的一组或多组键值对，就是查询参数</p><h2 id="FastAPI的查询参数"><a href="#FastAPI的查询参数" class="headerlink" title="FastAPI的查询参数"></a>FastAPI的查询参数</h2><ul><li>当声明了不属于路径参数以外的其他函数参数时，FastAPI会自动解析为查询参数；</li><li>和路径参数不同，查询参数可以是可选非必填的，也可以具有默认值。</li></ul><h3 id="路径参数-请求参数的栗子"><a href="#路径参数-请求参数的栗子" class="headerlink" title="路径参数 + 请求参数的栗子"></a>路径参数 + 请求参数的栗子</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI<span class="token keyword">import</span> uvicornapp <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 路径参数 + 请求参数</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/items/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_item</span><span class="token punctuation">(</span>    item_id<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>    name<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">}</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token operator">=</span><span class="token string">'***:app'</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">8080</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="正确传参的请求结果："><a href="#正确传参的请求结果：" class="headerlink" title="正确传参的请求结果："></a>正确传参的请求结果：</h4><img src="/2023/11/09/python/fastapi/fastapi-5-cha-xun-can-shu-query-parameters/FastAPI-5%EF%BC%9A%E6%9F%A5%E8%AF%A2%E5%8F%82%E6%95%B0Query%20Parameters-1.png" class><h3 id="必传参数-可选参数的栗子"><a href="#必传参数-可选参数的栗子" class="headerlink" title="必传参数 + 可选参数的栗子"></a>必传参数 + 可选参数的栗子</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional<span class="token comment"># 必传参数 + 可选参数</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/items'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_item</span><span class="token punctuation">(</span>    item_id<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>    name<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">}</span><span class="token comment"># 如下：name没有传递参数取的值是None空</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="不传-name-的请求结果："><a href="#不传-name-的请求结果：" class="headerlink" title="不传 name 的请求结果："></a>不传 <code>name</code> 的请求结果：</h4><img src="/2023/11/09/python/fastapi/fastapi-5-cha-xun-can-shu-query-parameters/FastAPI-5%EF%BC%9A%E6%9F%A5%E8%AF%A2%E5%8F%82%E6%95%B0Query%20Parameters-2.png" class><h3 id="查询参数类型自动转换"><a href="#查询参数类型自动转换" class="headerlink" title="查询参数类型自动转换"></a>查询参数类型自动转换</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 查询参数类型转换</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/items/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_item</span><span class="token punctuation">(</span>    item_id<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>    q<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>    short<span class="token punctuation">:</span> <span class="token builtin">bool</span> <span class="token operator">=</span> <span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    item <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">}</span>    <span class="token keyword">if</span> q<span class="token punctuation">:</span>        item<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">'q'</span><span class="token punctuation">:</span> q<span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> short<span class="token punctuation">:</span>        <span class="token comment"># 如果 short == False，则多加一个键description</span>        item<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token punctuation">{</span>            <span class="token string">'description'</span><span class="token punctuation">:</span> <span class="token string">'This is an amazing item has a long description'</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> item<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="short-是-True-的请求结果："><a href="#short-是-True-的请求结果：" class="headerlink" title="short 是 True 的请求结果："></a><code>short</code> 是 <code>True</code> 的请求结果：</h4><img src="/2023/11/09/python/fastapi/fastapi-5-cha-xun-can-shu-query-parameters/FastAPI-5%EF%BC%9A%E6%9F%A5%E8%AF%A2%E5%8F%82%E6%95%B0Query%20Parameters-3.png" class><h4 id="short-是-False-的请求结果："><a href="#short-是-False-的请求结果：" class="headerlink" title="short 是 False 的请求结果："></a><code>short</code> 是 <code>False</code> 的请求结果：</h4><img src="/2023/11/09/python/fastapi/fastapi-5-cha-xun-can-shu-query-parameters/FastAPI-5%EF%BC%9A%E6%9F%A5%E8%AF%A2%E5%8F%82%E6%95%B0Query%20Parameters-4.png" class><h3 id="指定枚举类型请求参数的栗子"><a href="#指定枚举类型请求参数的栗子" class="headerlink" title="指定枚举类型请求参数的栗子"></a>指定枚举类型请求参数的栗子</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> enum <span class="token keyword">import</span> Enum<span class="token keyword">from</span> typing <span class="token keyword">import</span> Optional<span class="token punctuation">,</span> List<span class="token comment"># 自定义枚举类型</span><span class="token keyword">class</span> <span class="token class-name">ModelName</span><span class="token punctuation">(</span>Enum<span class="token punctuation">)</span><span class="token punctuation">:</span>    boy <span class="token operator">=</span> <span class="token string">'男'</span>    girl <span class="token operator">=</span> <span class="token string">'女'</span>    unknown <span class="token operator">=</span> <span class="token string">'不知道'</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/item_enum'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_item</span><span class="token punctuation">(</span>    name<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>    sex<span class="token punctuation">:</span> Optional<span class="token punctuation">[</span>ModelName<span class="token punctuation">]</span> <span class="token operator">=</span> ModelName<span class="token punctuation">.</span>unknown<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'name'</span><span class="token punctuation">:</span> name<span class="token punctuation">,</span> <span class="token string">'sex'</span><span class="token punctuation">:</span> sex<span class="token punctuation">}</span><span class="token comment"># 不传sex，会取sex的默认值：枚举类中的unknown的值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="参数传递枚举值的请求结果："><a href="#参数传递枚举值的请求结果：" class="headerlink" title="参数传递枚举值的请求结果："></a>参数传递枚举值的请求结果：</h4><img src="/2023/11/09/python/fastapi/fastapi-5-cha-xun-can-shu-query-parameters/FastAPI-5%EF%BC%9A%E6%9F%A5%E8%AF%A2%E5%8F%82%E6%95%B0Query%20Parameters-5.png" class><h4 id="不传-sex-的请求结果："><a href="#不传-sex-的请求结果：" class="headerlink" title="不传 sex 的请求结果："></a>不传 <code>sex</code> 的请求结果：</h4><img src="/2023/11/09/python/fastapi/fastapi-5-cha-xun-can-shu-query-parameters/FastAPI-5%EF%BC%9A%E6%9F%A5%E8%AF%A2%E5%8F%82%E6%95%B0Query%20Parameters-6.png" class><h3 id="查询参数能用List-str-传参吗？"><a href="#查询参数能用List-str-传参吗？" class="headerlink" title="查询参数能用List[str]传参吗？"></a>查询参数能用List[str]传参吗？</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># List[str]</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/list'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_item</span><span class="token punctuation">(</span>    address<span class="token punctuation">:</span>List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'address'</span><span class="token punctuation">:</span> address<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="请求结果："><a href="#请求结果：" class="headerlink" title="请求结果："></a>请求结果：</h4><img src="/2023/11/09/python/fastapi/fastapi-5-cha-xun-can-shu-query-parameters/FastAPI-5%EF%BC%9A%E6%9F%A5%E8%AF%A2%E5%8F%82%E6%95%B0Query%20Parameters-7.png" class><ul><li>即使参数值写成数组形式也不会传值成功，因为查询参数都是字符串；</li><li>所以 <code>['北京','上海','广州','深圳']</code> 其实是一个字符串str，并不是List[str]，那么怎样才能传数组呢？</li></ul><h3 id="分开多次传-address-可以吗？"><a href="#分开多次传-address-可以吗？" class="headerlink" title="分开多次传 address 可以吗？"></a>分开多次传 <code>address</code> 可以吗？</h3><img src="/2023/11/09/python/fastapi/fastapi-5-cha-xun-can-shu-query-parameters/FastAPI-5%EF%BC%9A%E6%9F%A5%E8%AF%A2%E5%8F%82%E6%95%B0Query%20Parameters-8.png" class><p>答案也是否定的</p><h3 id="具体怎样做？"><a href="#具体怎样做？" class="headerlink" title="具体怎样做？"></a>具体怎样做？</h3><p>用Query库，下篇细说！！！</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> FasAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> FastAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI-4：路径参数Path Parameters</title>
      <link href="/2023/11/08/python/fastapi/fastapi-4-lu-jing-can-shu-path-parameters/"/>
      <url>/2023/11/08/python/fastapi/fastapi-4-lu-jing-can-shu-path-parameters/</url>
      
        <content type="html"><![CDATA[<h1 id="FastAPI-4：路径参数Path-Parameters"><a href="#FastAPI-4：路径参数Path-Parameters" class="headerlink" title="FastAPI-4：路径参数Path Parameters"></a>FastAPI-4：路径参数Path Parameters</h1><h2 id="什么是路径"><a href="#什么是路径" class="headerlink" title="什么是路径"></a>什么是路径</h2><ul><li>假设一个 <code>url</code> 是：<a href="http://127.0.0.1:8080/items/abcd">http://127.0.0.1:8080/items/abcd</a></li><li>那么路径 <code>path</code> 就是：/items/abcd</li></ul><h3 id="路径参数"><a href="#路径参数" class="headerlink" title="路径参数"></a>路径参数</h3><p>就是将路径上的某一部分变成参数，可通过请求传递，然后 FastAPI 解析。</p><h3 id="最简单的栗子"><a href="#最简单的栗子" class="headerlink" title="最简单的栗子"></a>最简单的栗子</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> uvicorn<span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPIapp <span class="token operator">=</span> fastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 路径参数 item_id</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/items/{item_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_item</span><span class="token punctuation">(</span>item_id<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'item_id'</span><span class="token punctuation">:</span> item_id<span class="token punctuation">}</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="请求结果："><a href="#请求结果：" class="headerlink" title="请求结果："></a>请求结果：</h4><img src="/2023/11/08/python/fastapi/fastapi-4-lu-jing-can-shu-path-parameters/FastAPI-4%EF%BC%9A%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0Path%20Parameters-1.png" class><h3 id="限定类型的路径参数"><a href="#限定类型的路径参数" class="headerlink" title="限定类型的路径参数"></a>限定类型的路径参数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 指定类型的路径参数</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/items/{item_id}/article/{num}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">path_test</span><span class="token punctuation">(</span>    item_id<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span>    num<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">"item_id"</span><span class="token punctuation">:</span> item_id<span class="token punctuation">,</span> <span class="token string">'num'</span><span class="token punctuation">:</span> num<span class="token punctuation">}</span><span class="token comment"># 多个路径参数，且有指定类型</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="正确传参的请求结果："><a href="#正确传参的请求结果：" class="headerlink" title="正确传参的请求结果："></a>正确传参的请求结果：</h4><img src="/2023/11/08/python/fastapi/fastapi-4-lu-jing-can-shu-path-parameters/FastAPI-4%EF%BC%9A%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0Path%20Parameters-2.png" class><h4 id="num不传int的结果："><a href="#num不传int的结果：" class="headerlink" title="num不传int的结果："></a>num不传int的结果：</h4><img src="/2023/11/08/python/fastapi/fastapi-4-lu-jing-can-shu-path-parameters/FastAPI-4%EF%BC%9A%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0Path%20Parameters-3.png" class><h4 id="Swagger接口文档的显示效果"><a href="#Swagger接口文档的显示效果" class="headerlink" title="Swagger接口文档的显示效果"></a>Swagger接口文档的显示效果</h4><img src="/2023/11/08/python/fastapi/fastapi-4-lu-jing-can-shu-path-parameters/FastAPI-4%EF%BC%9A%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0Path%20Parameters-4.png" class><h3 id="路径函数顺序问题"><a href="#路径函数顺序问题" class="headerlink" title="路径函数顺序问题"></a>路径函数顺序问题</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/users/me'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_user_me</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'user_id'</span><span class="token punctuation">:</span> <span class="token string">'the current user'</span><span class="token punctuation">}</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/users/{user_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_user</span><span class="token punctuation">(</span>user_id<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'user_id'</span><span class="token punctuation">:</span> user_id<span class="token punctuation">}</span><span class="token comment"># /users/{user_id} 路径是包含 /users/me 的</span><span class="token comment"># 当想匹配到固定路径时，需要将固定路径函数放在路径参数函前面</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="请求结果：-1"><a href="#请求结果：-1" class="headerlink" title="请求结果："></a>请求结果：</h4><img src="/2023/11/08/python/fastapi/fastapi-4-lu-jing-can-shu-path-parameters/FastAPI-4%EF%BC%9A%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0Path%20Parameters-5.png" class><h3 id="将两个函数顺序调换过来"><a href="#将两个函数顺序调换过来" class="headerlink" title="将两个函数顺序调换过来"></a>将两个函数顺序调换过来</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/users/{user_id}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_user</span><span class="token punctuation">(</span>user_id<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'user_id'</span><span class="token punctuation">:</span> user_id<span class="token punctuation">}</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/users/me'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_user_me</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'user_id'</span><span class="token punctuation">:</span> <span class="token string">'the current user'</span><span class="token punctuation">}</span><span class="token comment"># 这样就无法匹配到固定路径 /users/me 函数了</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="请求结果：-2"><a href="#请求结果：-2" class="headerlink" title="请求结果："></a>请求结果：</h4><img src="/2023/11/08/python/fastapi/fastapi-4-lu-jing-can-shu-path-parameters/FastAPI-4%EF%BC%9A%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0Path%20Parameters-6.png" class><h2 id="数据转换器"><a href="#数据转换器" class="headerlink" title="数据转换器"></a>数据转换器</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><ul><li>当你有一个路径是 <code>/files/{file_path}</code> ，但是不确定 <code>file_path</code> 到底会取什么值，并不是固定的长度，可能是 <code>/files/home/johndoe/myfile.txt</code> 也可能是 <code>/files/test/myfile.txt</code> ，那怎么办呢？</li><li>路径转换器来啦！</li></ul><h3 id="实际栗子"><a href="#实际栗子" class="headerlink" title="实际栗子"></a>实际栗子</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/files/{file_path:path}'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">read_file</span><span class="token punctuation">(</span>file_path<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'file_path'</span><span class="token punctuation">:</span> file_path<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="请求结果：-3"><a href="#请求结果：-3" class="headerlink" title="请求结果："></a>请求结果：</h4><img src="/2023/11/08/python/fastapi/fastapi-4-lu-jing-can-shu-path-parameters/FastAPI-4%EF%BC%9A%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0Path%20Parameters-7.png" class><h3 id="枚举类型的路径参数"><a href="#枚举类型的路径参数" class="headerlink" title="枚举类型的路径参数"></a>枚举类型的路径参数</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 导入枚举类型</span><span class="token keyword">from</span> enum <span class="token keyword">import</span> Enum<span class="token comment"># 自定义枚举类</span><span class="token keyword">class</span> <span class="token class-name">ModelName</span><span class="token punctuation">(</span>Enum<span class="token punctuation">)</span><span class="token punctuation">:</span>    polo <span class="token operator">=</span> <span class="token string">'polo'</span>    yy <span class="token operator">=</span> <span class="token string">'yy'</span>    test <span class="token operator">=</span> <span class="token string">'test'</span>    <span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'model/{model_name}'</span><span class="token punctuation">)</span><span class="token comment"># 类型限定为枚举类</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">get_model</span><span class="token punctuation">(</span>model_name<span class="token punctuation">:</span> ModelName<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 取枚举值方式一</span>    <span class="token keyword">if</span> model_name <span class="token operator">==</span> ModelName<span class="token punctuation">.</span>polo<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'model_name'</span><span class="token punctuation">:</span> model_name<span class="token punctuation">,</span> <span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'Oh!!!polo!!!'</span><span class="token punctuation">}</span>    <span class="token comment"># 取枚举方式二</span>    <span class="token keyword">if</span> model_name<span class="token punctuation">.</span>value <span class="token operator">==</span> <span class="token string">'yy'</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'model_name'</span><span class="token punctuation">:</span> model_name<span class="token punctuation">,</span> <span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'God!!!yy!!!'</span><span class="token punctuation">}</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'model_name'</span><span class="token punctuation">:</span> model_name<span class="token punctuation">,</span> <span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'巴啦啦能量!!!'</span><span class="token punctuation">}</span><span class="token comment"># 错误提示传的参数值并不是枚举类型中的值</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="参数传枚举值请求结果："><a href="#参数传枚举值请求结果：" class="headerlink" title="参数传枚举值请求结果："></a>参数传枚举值请求结果：</h4><p>polo:</p><img src="/2023/11/08/python/fastapi/fastapi-4-lu-jing-can-shu-path-parameters/FastAPI-4%EF%BC%9A%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0Path%20Parameters-8.png" class><p>yy:</p><img src="/2023/11/08/python/fastapi/fastapi-4-lu-jing-can-shu-path-parameters/FastAPI-4%EF%BC%9A%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0Path%20Parameters-9.png" class><p>test:</p><img src="/2023/11/08/python/fastapi/fastapi-4-lu-jing-can-shu-path-parameters/FastAPI-4%EF%BC%9A%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0Path%20Parameters-10.png" class><h4 id="参数传入非枚举值的请求结果："><a href="#参数传入非枚举值的请求结果：" class="headerlink" title="参数传入非枚举值的请求结果："></a>参数传入非枚举值的请求结果：</h4><img src="/2023/11/08/python/fastapi/fastapi-4-lu-jing-can-shu-path-parameters/FastAPI-4%EF%BC%9A%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0Path%20Parameters-11.png" class><h2 id="重点："><a href="#重点：" class="headerlink" title="重点："></a>重点：</h2><h3 id="路径参数可以不传吗？答案：不可以！路径参数是必传参数。"><a href="#路径参数可以不传吗？答案：不可以！路径参数是必传参数。" class="headerlink" title="路径参数可以不传吗？答案：不可以！路径参数是必传参数。"></a>路径参数可以不传吗？答案：不可以！路径参数是必传参数。</h3><p>实际栗子：</p><img src="/2023/11/08/python/fastapi/fastapi-4-lu-jing-can-shu-path-parameters/FastAPI-4%EF%BC%9A%E8%B7%AF%E5%BE%84%E5%8F%82%E6%95%B0Path%20Parameters-12.png" class><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p><strong>路径参数是请求路径的一部分，如果不传，请求的是另一个路径，如果不存在就会404</strong></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> FasAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> FastAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI-3：uvicorn.run()</title>
      <link href="/2023/11/07/python/fastapi/fastapi-3-uvicorn.run/"/>
      <url>/2023/11/07/python/fastapi/fastapi-3-uvicorn.run/</url>
      
        <content type="html"><![CDATA[<h1 id="FastAPI-3：uvicorn-run"><a href="#FastAPI-3：uvicorn-run" class="headerlink" title="FastAPI-3：uvicorn.run()"></a>FastAPI-3：uvicorn.run()</h1><h2 id="Uvicorn"><a href="#Uvicorn" class="headerlink" title="Uvicorn"></a>Uvicorn</h2><ul><li>基于 <code>uvloop</code> 和 <code>httptools</code> 构建的非常快速的 <code>ASGI</code> 服务器；</li><li>它不是一个 <code>Web</code> 框架，而是一个服务器；</li><li>例如，他不是一个提供路径路由的框架，这是 <code>FastAPI</code> 框架提供的东西；</li><li>它是 <code>Starlette</code> 和 <code>FastAPI</code> 的推荐使用的服务器。</li></ul><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><code>uvicorn</code> 是运行 <code>FastAPI</code> 应用程序的主要 <code>Web</code> 服务器，<code>uvicorn</code> 和 <code>Gunicorn</code> 结合使用，拥有一个异步多进程服务器。</p><h2 id="什么是ASGI、WSGI"><a href="#什么是ASGI、WSGI" class="headerlink" title="什么是ASGI、WSGI"></a>什么是ASGI、WSGI</h2><p><a href="https://www.cnblogs.com/poloyy/15291403.html">https://www.cnblogs.com/poloyy/15291403.html</a></p><h2 id="最简单的-FastAPI代码"><a href="#最简单的-FastAPI代码" class="headerlink" title="最简单的 FastAPI代码"></a>最简单的 FastAPI代码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPIapp <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'Hello World'</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="启动-uvicorn"><a href="#启动-uvicorn" class="headerlink" title="启动 uvicorn"></a>启动 uvicorn</h2><p>进到 <code>.py</code> 文件所处目录下的命令运行</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">uvicorn main<span class="token punctuation">:</span>app <span class="token operator">-</span><span class="token operator">-</span><span class="token builtin">reload</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/../../static/Python/FastAPI/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-1.png" alt="1"></p><p>能不能不用命令行方式运行呢，否则太不方便了？ –可以！</p><h3 id="使用-uvicorn-run"><a href="#使用-uvicorn-run" class="headerlink" title="使用 uvicorn.run()"></a>使用 <code>uvicorn.run()</code></h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPIapp <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'Hello World'</span><span class="token punctuation">}</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    uvicorn<span class="token punctuation">.</span>run<span class="token punctuation">(</span>app<span class="token operator">=</span><span class="token string">'main:app'</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'0.0.0.0'</span><span class="token punctuation">,</span> post<span class="token operator">=</span><span class="token number">8010</span><span class="token punctuation">,</span> <span class="token builtin">reload</span><span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment"># 这样就不用敲命令行啦；</span><span class="token comment"># uvicorn 有什么命令行参数，run()方法就有什么参数。</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="uvicorn常用参数"><a href="#uvicorn常用参数" class="headerlink" title="uvicorn常用参数"></a>uvicorn常用参数</h3><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>app</td><td>运行的 .py 文件:FastAPI实例对象</td></tr><tr><td>host</td><td>访问url，默认 127.0.0.1</td></tr><tr><td>port</td><td>访问端口，默认8080</td></tr><tr><td>reload</td><td>热更新，有内容修改自动重启服务器</td></tr><tr><td>debug</td><td>同 reload</td></tr><tr><td>reload_dirs</td><td>设置需要 reload 的目录，List[str] 类型</td></tr><tr><td>log_level</td><td>设置日志级别，默认 info</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> FasAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> FastAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI-2：快速入门</title>
      <link href="/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/"/>
      <url>/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/</url>
      
        <content type="html"><![CDATA[<h1 id="FastAPI-2：快速入门"><a href="#FastAPI-2：快速入门" class="headerlink" title="FastAPI-2：快速入门"></a>FastAPI-2：快速入门</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> fastapi<span class="token comment"># 将来需要将应用程序部署到生产环境可以安装 uvicorn 作为服务器</span>pip <span class="token function">install</span> uvicorn<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="最简单的代码栗子"><a href="#最简单的代码栗子" class="headerlink" title="最简单的代码栗子"></a>最简单的代码栗子</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPIapp <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">"Hello World"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="运行-uvicorn-命令，启动服务器"><a href="#运行-uvicorn-命令，启动服务器" class="headerlink" title="运行 uvicorn 命令，启动服务器"></a>运行 <code>uvicorn</code> 命令，启动服务器</h2><p>进入 <code>.py</code> 文件所属目录的命令行</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">uvicorn main<span class="token punctuation">:</span>app <span class="token operator">-</span><span class="token operator">-</span><span class="token builtin">reload</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>main</strong> ：main.py文件（一个Python[模块]）；</li><li><strong>app</strong> ：在 main.py 文件中通过 app = FastAPI() 创建的对象；</li><li><strong>–reload</strong> ：让服务器在更新代码后自动重新启动，仅在开发时使用该选项。</li></ul><h3 id="服务启动示例"><a href="#服务启动示例" class="headerlink" title="服务启动示例"></a>服务启动示例</h3><img src="/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-1.png" class><h3 id="浏览器访问"><a href="#浏览器访问" class="headerlink" title="浏览器访问"></a>浏览器访问</h3><img src="/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-2.png" class><h3 id="查看交互式文档"><a href="#查看交互式文档" class="headerlink" title="查看交互式文档"></a>查看交互式文档</h3><img src="/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-3.png" class><h3 id="查看可选的API文档"><a href="#查看可选的API文档" class="headerlink" title="查看可选的API文档"></a>查看可选的API文档</h3><img src="/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-4.png" class><h2 id="OpenAPI"><a href="#OpenAPI" class="headerlink" title="OpenAPI"></a>OpenAPI</h2><p>FastAPI使用API的OpenAPI标准为所有API生成schema</p><h3 id="schema"><a href="#schema" class="headerlink" title="schema"></a>schema</h3><ul><li>是对事务的一种定义或描述；</li><li>它并非具体的实现代码，只是抽象描述；</li></ul><h3 id="API-Schema"><a href="#API-Schema" class="headerlink" title="API Schema"></a>API Schema</h3><ul><li>OpenAPI 是一种规定如何定义API Schema的规范；</li><li>定义的OpenAPI Schema将包括API路径，以及它们肯能使用的参数等等；</li><li>比如：这个API的作用是什么，需要必传哪些参数，请求方法是什么。</li></ul><h3 id="Data-Schema"><a href="#Data-Schema" class="headerlink" title="Data Schema"></a>Data Schema</h3><ul><li>指的是某些数据比如JSON的结构；</li><li>它可以表示JSON的属性及其具有的数据类型；</li><li>比如：某个属性的数据类型是什么，有没有默认值，是不是必填，作用是什么。</li></ul><h3 id="JSON-Schema"><a href="#JSON-Schema" class="headerlink" title="JSON Schema"></a>JSON Schema</h3><ul><li>OpenAPI会为API定义API Schema，一般会包括API发送和接收的数据的定义，比如：发送的数据的类型，是否必填；</li><li>这些定义会以JSON数据格式展示出来，所以都会称为JSON Schema。</li></ul><h3 id="查看-openapi-json"><a href="#查看-openapi-json" class="headerlink" title="查看 openapi.json"></a>查看 openapi.json</h3><p>原始的OpenAPI Schema，其实它只是一个自动生成的包含了所有API描述的JSON数据结构。</p><img src="/2023/11/06/python/fastapi/fastapi-2-kuai-su-ru-men/FastAPI-2%EF%BC%9A%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8-5.png" class><h2 id="拆分代码详情"><a href="#拆分代码详情" class="headerlink" title="拆分代码详情"></a>拆分代码详情</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">### 第一步</span><span class="token keyword">from</span> fastapi <span class="token keyword">import</span> FastAPI<span class="token comment"># 1、FastAPI 是一个为API提供了所有功能的Python类，必写就对了；</span><span class="token comment"># 2、FastAPI 是直接从 Starlette 继承的类，可以通过FastAPI使用所有的Starlette的功能。</span><span class="token comment">### 第二步</span>app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 1、app就是FastAPI类的一个实例对象啦；</span><span class="token comment"># 2、重点：app 将是创建所有API的主要交互对象；</span><span class="token comment"># 3、要点：uvicorn 执行命令时也会用到app。</span><span class="token comment"># 将app变量名换一下：</span>my_app <span class="token operator">=</span> FastAPI<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 那么运行时也需要换</span>uvicorn main<span class="token punctuation">:</span>my_app <span class="token operator">-</span><span class="token operator">-</span><span class="token builtin">reload</span><span class="token comment">### 第三步</span><span class="token comment"># 创建一个路径操作</span><span class="token comment"># 路径</span><span class="token comment"># 1、指的是URL中从第一个 / 起的后半部分，即常说的path</span><span class="token comment"># 2、比如：https://example.com/items/foo 的路径就是 /items/foo</span><span class="token comment"># 3、路径也称为：端点路由</span><span class="token comment"># 操作：就是HTTP请求方式</span>    <span class="token comment"># 1、POST</span>    <span class="token comment"># 2、GET</span>    <span class="token comment"># 3、PUT</span>    <span class="token comment"># 4、DELETE</span>    <span class="token comment"># 5、OPTIONS</span>    <span class="token comment"># 6、HEAD</span>    <span class="token comment"># 7、PATCH</span>    <span class="token comment"># 8、TRACE</span><span class="token comment"># 在 HTTP 协议中，可以使用以上的其中一种（或多种）与每个路径进行通信</span><span class="token comment"># 遵守RESTFul风格的话</span><span class="token comment"># 通常使用：</span>    <span class="token comment"># 1、POST：新建数据</span>    <span class="token comment"># 2、GET：获取数据</span>    <span class="token comment"># 3、PUT：更新数据</span>    <span class="token comment"># 4、DELETE：删除数据</span><span class="token comment"># 定义一个路径操作装饰器</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>get</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token comment"># 有两点含义</span>    <span class="token comment"># 1、请求路径为'/'</span>    <span class="token comment"># 2、使用 get 请求</span><span class="token comment"># 其它请求方法的装饰器</span>    <span class="token comment"># 1、@app.post()</span>    <span class="token comment"># 2、@app.put()</span>    <span class="token comment"># 3、@app.delete()</span>    <span class="token comment"># 4、@app.potions()</span>    <span class="token comment"># 5、@app.head()</span>    <span class="token comment"># 6、@app.patch()</span>    <span class="token comment"># 7、@app.trace()</span>    <span class="token comment">### 第四步</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment"># 1、这就是一个普通的Python函数；</span><span class="token comment"># 2、每当FastAPI接收一个使用 GET 方法访问路径为 / 的请求时这个函数会被调用；</span><span class="token comment"># 3、在这个栗子中，它是一个 async 函数（异步处理函数）。</span><span class="token comment"># 可以不加 async</span><span class="token keyword">def</span> <span class="token function">first</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">### 第五步</span><span class="token keyword">return</span> <span class="token punctuation">{</span><span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token string">'Hello World'</span><span class="token punctuation">}</span><span class="token comment"># 1、可以返回一个 dict、list，也可是 str、int单个值；</span><span class="token comment"># 2、还可以返回 Pydantic 模型；</span><span class="token comment"># 3、还可以是其他会自动转换为JSON的对象和模型（包括ORM对象等）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="FastAPI入门总结"><a href="#FastAPI入门总结" class="headerlink" title="FastAPI入门总结"></a>FastAPI入门总结</h2><p>编写一个最简单的FastAPI应用程序五部曲</p><ol><li>导入FastAPI</li><li>创建一个app实例</li><li>编写一个路径操作装饰器，如 <code>@app.get('/')</code></li><li>编写一个路径操作函数，如 <code>def first():</code></li><li>运行开发服务器，如 <code>uvicron main:app --reload</code></li></ol>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> FasAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> FastAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FastAPI-1：介绍</title>
      <link href="/2023/11/06/python/fastapi/fastapi-1-jie-shao/"/>
      <url>/2023/11/06/python/fastapi/fastapi-1-jie-shao/</url>
      
        <content type="html"><![CDATA[<h1 id="FastAPI-1：介绍"><a href="#FastAPI-1：介绍" class="headerlink" title="FastAPI-1：介绍"></a>FastAPI-1：介绍</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>为啥要学它呢，因为学 <code>Flask</code> 的时候发现有人更推荐它代替 <code>Flask</code> ，看了下介绍，感觉很强，而且也能拿来做平台，当然学起来！卷起来！</p><h2 id="为什么要是用FastAPI？"><a href="#为什么要是用FastAPI？" class="headerlink" title="为什么要是用FastAPI？"></a>为什么要是用FastAPI？</h2><ul><li>日渐没落的是后端HTML渲染这种方式，比如 <code>Flask + Jinja2</code> </li><li>前后端分离成为主流</li><li>异步框架</li></ul><p>官方地址：<a href="https://fastapi.tiangolo.com/">https://fastapi.tiangolo.com/</a></p><h2 id="FastAPI是什么？"><a href="#FastAPI是什么？" class="headerlink" title="FastAPI是什么？"></a>FastAPI是什么？</h2><ul><li><code>FastAPI</code> 是一个现代、快速（高性能）的web框架</li><li>用于基于标准 <code>Python</code> 类型提示是用 <code>Python 3.6+</code> 构建API</li></ul><h2 id="FastAPI版本要求"><a href="#FastAPI版本要求" class="headerlink" title="FastAPI版本要求"></a>FastAPI版本要求</h2><p>Python3.6+</p><h2 id="FastAPI优点"><a href="#FastAPI优点" class="headerlink" title="FastAPI优点"></a>FastAPI优点</h2><p>官方说明：</p><ul><li>类型检查、自动swagger UI、支持asyncio、强大的依赖注入系统；</li><li>围绕着框架本身的插件生态，比如pydantic、SQLAlchemy，成熟；</li><li>速度快：非常高的性能，与 <code>NodeJS</code> 和 <code>Go</code> 不相上下，多亏 <code>Starlette</code> 和 <code>Pydantic</code> ， FastAPI是最快的 <code>Python</code> 框架之一；</li><li>编码快：将开发特性所需的速度提高大约 200% 到 300%；</li><li>错误少：减少大约 40% 的人为（开发）错误；</li><li>直观：强大的编辑器支持，支持多场景开发，调试所花的时间更少；</li><li>简单：被设计为易于使用和学习，减少阅读文档的时间；</li><li>代码少：最小化重复，更少的错误；</li><li>健壮：代码可随时部署到生产环境，并自动提供交互文档；</li><li>标准：基于（并完全兼容）api的开放标准：OpenAPI（以前称为Swagger）和JSON模式</li></ul><h2 id="Pydantic-在-FastAPI"><a href="#Pydantic-在-FastAPI" class="headerlink" title="Pydantic 在 FastAPI"></a>Pydantic 在 FastAPI</h2><ul><li>FastAPI是完全建立在Pydantic的基础上的；</li><li>Pydantic是一个用来执行数据校验的Python库，具体教程可看：<a href="https://www.cnblogs.com/poloyy/tag/Pydantic/">https://www.cnblogs.com/poloyy/tag/Pydantic/</a></li></ul><h2 id="Type-Hints-在FastAPI"><a href="#Type-Hints-在FastAPI" class="headerlink" title="Type Hints 在FastAPI"></a>Type Hints 在FastAPI</h2><ul><li>Type Hints 介绍：<a href="https://www.cnblogs.com/poloyy/p/15145380.html">https://www.cnblogs.com/poloyy/p/15145380.html</a></li><li>typing 模块：<a href="https://www.cnblogs.com/poloyy/p/15150315.html">https://www.cnblogs.com/poloyy/p/15150315.html</a></li></ul><h3 id="使用FastAPI时用Type-Hints声明参数可以获得"><a href="#使用FastAPI时用Type-Hints声明参数可以获得" class="headerlink" title="使用FastAPI时用Type Hints声明参数可以获得"></a>使用FastAPI时用Type Hints声明参数可以获得</h3><ul><li>编辑器支持智能提示，错误检查；</li><li>类型检查，不对会报warning；</li></ul><h3 id="FastAPI还会用类型提示来做"><a href="#FastAPI还会用类型提示来做" class="headerlink" title="FastAPI还会用类型提示来做"></a>FastAPI还会用类型提示来做</h3><ul><li><strong>定义参数要求</strong> ：声明对请求路径参数、查询参数、请求头、请求体、依赖等的要求；</li><li><strong>转换数据</strong> ：将来自请求的数据转换为需要的类型；</li><li>**校验数据 **：对于每一个请求当数据校验失败时自动生成错误信息返回给客户端；</li><li><strong>使用 OpenAPI 记录API</strong> ：然后用于自动生成交互式文档的用户界面，参数会显示对应的类型注释。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> FasAPI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> FastAPI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>笔记</title>
      <link href="/2023/11/05/bi-ji/"/>
      <url>/2023/11/05/bi-ji/</url>
      
        <content type="html"><![CDATA[<h1 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h1><h2 id="一、Python的requirements-txt文件"><a href="#一、Python的requirements-txt文件" class="headerlink" title="一、Python的requirements.txt文件"></a>一、Python的requirements.txt文件</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 自动生成requirements.txt文件</span>pip freeze <span class="token operator">&gt;</span> requirements<span class="token punctuation">.</span>txt<span class="token comment"># 安装requirements.txt依赖</span>pip install <span class="token operator">-</span>r requirements<span class="token punctuation">.</span>txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二、vim编辑器中文乱码问题"><a href="#二、vim编辑器中文乱码问题" class="headerlink" title="二、vim编辑器中文乱码问题"></a>二、vim编辑器中文乱码问题</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 执行（打开vi编辑器新建.vimrc文件）</span>$: <span class="token function">vi</span> ~/.vimrc---------------------------------<span class="token comment"># 文件内容</span><span class="token builtin class-name">set</span> <span class="token assign-left variable">encoding</span><span class="token operator">=</span>utf-8  <span class="token comment"># 显示的编码</span><span class="token builtin class-name">set</span> <span class="token assign-left variable">fileencoding</span><span class="token operator">=</span>utf-8  <span class="token comment"># 写入文件的编码</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三、Nginx配置"><a href="#三、Nginx配置" class="headerlink" title="三、Nginx配置"></a>三、Nginx配置</h2><pre class="line-numbers language-nginx" data-language="nginx"><code class="language-nginx"><span class="token comment"># 配置静态文件</span><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>    <span class="token directive"><span class="token keyword">location</span> ^~/static</span> <span class="token punctuation">{</span>  <span class="token comment"># 静态文件路由</span>        <span class="token directive"><span class="token keyword">alias</span> /usr/project/static</span><span class="token punctuation">;</span>  <span class="token comment"># 静态文件所在目录</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token comment"># 配置项目相关</span><span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">{</span>    <span class="token directive"><span class="token keyword">location</span> /api</span> <span class="token punctuation">{</span>        <span class="token directive"><span class="token keyword">proxy_pass</span> http://127.0.0.1:8000</span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> Host <span class="token variable">$host</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Protocol https</span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_set_header</span> X-USERTOKEN <span class="token variable">$http_x_usertoken</span></span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_connect_timeout</span> xxx</span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_read_timeout</span> xxx</span><span class="token punctuation">;</span>        <span class="token directive"><span class="token keyword">proxy_send_timeout</span> xxx</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="四、pymysql"><a href="#四、pymysql" class="headerlink" title="四、pymysql"></a>四、pymysql</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pymysqldb <span class="token operator">=</span> pymysql<span class="token punctuation">.</span>connect<span class="token punctuation">(</span>user<span class="token operator">=</span><span class="token string">'用户名'</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">'密码'</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'主机ip'</span><span class="token punctuation">,</span> database<span class="token operator">=</span><span class="token string">'要连接的库名'</span><span class="token punctuation">)</span>  <span class="token comment"># 连接数据库</span>sql <span class="token operator">=</span> <span class="token string">'sql语句'</span><span class="token triple-quoted-string string">'''使用with，调用完自动close()'''</span><span class="token keyword">with</span> db<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">)</span>  <span class="token comment"># 连接成功，返回True</span>    cur <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 创建游标</span>    cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>  <span class="token comment"># 执行sql语句</span>    cur<span class="token punctuation">.</span>description  <span class="token comment"># 显示每列的详细信息</span><span class="token keyword">print</span><span class="token punctuation">(</span>db<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">)</span>  <span class="token comment"># with结束以后自动关闭，返回False</span><span class="token triple-quoted-string string">'''使用try'''</span>cur <span class="token operator">=</span> db<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 创建游标</span><span class="token keyword">try</span><span class="token punctuation">:</span>    cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>  <span class="token comment"># 执行sql语句</span><span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>  <span class="token comment"># 捕获异常</span><span class="token keyword">finally</span><span class="token punctuation">:</span>    cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 关掉游标</span>    db<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 断开连接</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="五、sqlite3"><a href="#五、sqlite3" class="headerlink" title="五、sqlite3"></a>五、sqlite3</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sqlite3con <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span>connect<span class="token punctuation">(</span><span class="token string">'sqlite3文件所在位置'</span><span class="token punctuation">)</span>  <span class="token comment"># 创建连接</span>cur <span class="token operator">=</span> con<span class="token punctuation">.</span>cursor<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 创建游标</span>sql <span class="token operator">=</span> <span class="token string">'sql语句'</span><span class="token keyword">try</span><span class="token punctuation">:</span>    cur<span class="token punctuation">.</span>execute<span class="token punctuation">(</span>sql<span class="token punctuation">)</span>  <span class="token comment"># 执行sql语句</span><span class="token keyword">except</span> Exception <span class="token keyword">as</span> e<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span>  <span class="token comment"># 捕获异常</span><span class="token keyword">finally</span><span class="token punctuation">:</span>    cur<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 关掉游标</span>    con<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 断开连接</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-lua" data-language="lua"><code class="language-lua"><span class="token comment">-- lua 操作sqlite3</span><span class="token keyword">local</span> sqlite3 <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"sqlite3"</span><span class="token punctuation">)</span><span class="token keyword">local</span> env <span class="token operator">=</span> sqlite3<span class="token punctuation">.</span><span class="token function">sqlite3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">local</span> sql <span class="token operator">=</span> env<span class="token punctuation">:</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">"db文件路径"</span><span class="token punctuation">)</span><span class="token keyword">local</span> cursor<span class="token punctuation">,</span> errorString <span class="token operator">=</span> sql<span class="token punctuation">:</span><span class="token function">execute</span><span class="token punctuation">(</span><span class="token string">"SQL语句"</span><span class="token punctuation">)</span><span class="token keyword">local</span> row <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>  <span class="token comment">-- 定义空table获取cursor中的数据</span><span class="token keyword">while</span> <span class="token keyword">true</span> <span class="token keyword">do</span>    row <span class="token operator">=</span> cursor<span class="token punctuation">:</span><span class="token function">fetch</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span> <span class="token string">"a"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> row <span class="token operator">~=</span> <span class="token keyword">nil</span> <span class="token keyword">then</span>        <span class="token keyword">break</span>   <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 其他操作</span><span class="token comment"># 开启表头：.header on</span><span class="token comment"># 列 对 齐：.mode column</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="六、scp远程拷贝"><a href="#六、scp远程拷贝" class="headerlink" title="六、scp远程拷贝"></a>六、scp远程拷贝</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">scp</span> 连接名@连接地址:文件位置 要放到的位置<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="七、find查找文件"><a href="#七、find查找文件" class="headerlink" title="七、find查找文件"></a>七、find查找文件</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> <span class="token parameter variable">-name</span> <span class="token string">'文件名'</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="八、MySQL基本查询语句"><a href="#八、MySQL基本查询语句" class="headerlink" title="八、MySQL基本查询语句"></a>八、MySQL基本查询语句</h2><pre class="line-numbers language-sql" data-language="sql"><code class="language-sql"><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> 表名 <span class="token keyword">WHERE</span> 条件<span class="token punctuation">;</span>  <span class="token comment"># 查询</span><span class="token keyword">UPDATE</span> 表名 <span class="token keyword">SET</span> 要修改的内容 <span class="token keyword">WHERE</span> 条件<span class="token punctuation">;</span>  <span class="token comment"># 修改</span><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> 表名 <span class="token punctuation">(</span>字段名<span class="token punctuation">)</span> <span class="token keyword">VALUES</span> <span class="token punctuation">(</span>字段对应内容<span class="token punctuation">)</span>； <span class="token comment"># 添加数据</span><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> 表名 <span class="token keyword">WHERE</span> 条件<span class="token punctuation">;</span>  <span class="token comment"># 删除字段</span><span class="token keyword">DROP</span> <span class="token keyword">TABLE</span> {表名}  <span class="token comment"># 删除表</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="九、es相关功能"><a href="#九、es相关功能" class="headerlink" title="九、es相关功能"></a>九、es相关功能</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">curl</span> <span class="token string">'localhost:9200/_cat/indices?v'</span>  <span class="token comment"># 查看所有索引</span><span class="token function">curl</span> <span class="token string">'localhost:9200/_cat/indices?v&amp;s={列名}'</span>  <span class="token comment"># 查看所有索引，根据某一列进行排序</span><span class="token function">curl</span> <span class="token parameter variable">-XPOST</span> <span class="token string">'http://localhost:9200/{索引名称}/_unfreeze'</span>  <span class="token comment"># 索引解冻</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token string">'http://localhost:9200/_mapping?pretty'</span>  <span class="token comment"># 查看所有type</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token string">'http://localhost:9200/_cat/templates/?v'</span>  <span class="token comment"># 查看所有模板</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token string">'http://localhost:9200/{索引名称}/_search?pretty'</span>  <span class="token comment"># 查看索引数据</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token string">'http://localhost:9200/{索引名称}/_mapping?pretty'</span>  <span class="token comment"># 查看索引结构</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token string">'http://localhost:9200/{索引名称}/_mapping/field/{字段名}?pretty'</span>  <span class="token comment"># 查看索引下字段的映射</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token string">'http://localhost:9200/_index_template/{索引模板名称}'</span>  <span class="token comment"># 查看索引模板名称</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token string">'http://localhost:9200/_component_template/{组件模板名称}'</span>  <span class="token comment"># 查看组件模板</span><span class="token comment"># es的cat命令</span><span class="token assign-left variable">EsIp</span><span class="token operator">=</span><span class="token string">"http://localhost:9200/"</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/master?help  <span class="token comment"># help 查看帮助</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/master?v  <span class="token comment"># verbose 显示列名，查看master节点</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/master?v<span class="token operator">&amp;</span><span class="token assign-left variable">h</span><span class="token operator">=</span>host,ip,node  <span class="token comment"># Headers 只显示特定列</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/indices?v<span class="token operator">&amp;</span><span class="token assign-left variable">h</span><span class="token operator">=</span>index,docs.count,store.size<span class="token operator">&amp;</span><span class="token assign-left variable">bytes</span><span class="token operator">=</span>kb  <span class="token comment"># Bytes 数字格式化展示</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/indices?v<span class="token operator">&amp;</span><span class="token assign-left variable">h</span><span class="token operator">=</span>index,docs.count,store.size<span class="token operator">&amp;</span><span class="token assign-left variable">bytes</span><span class="token operator">=</span>kb<span class="token operator">&amp;</span><span class="token assign-left variable">format</span><span class="token operator">=</span>json<span class="token operator">&amp;</span>pretty  <span class="token comment"># json格式输出</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/indices?v<span class="token operator">&amp;</span><span class="token assign-left variable">h</span><span class="token operator">=</span>index,docs.count,store.size<span class="token operator">&amp;</span><span class="token assign-left variable">bytes</span><span class="token operator">=</span>kb<span class="token operator">&amp;</span><span class="token assign-left variable">format</span><span class="token operator">=</span>yaml<span class="token operator">&amp;</span>pretty  <span class="token comment"># yaml格式输出</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/indices?v<span class="token operator">&amp;</span><span class="token assign-left variable">h</span><span class="token operator">=</span>index,docs.count,store.size<span class="token operator">&amp;</span><span class="token assign-left variable">bytes</span><span class="token operator">=</span>kb<span class="token operator">&amp;</span>pretty<span class="token operator">&amp;</span><span class="token assign-left variable">s</span><span class="token operator">=</span>index,docs.count:desc  <span class="token comment"># Sort排序，根据index升序，docs.count降序</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/health?v<span class="token operator">&amp;</span><span class="token assign-left variable">h</span><span class="token operator">=</span>cluster,status  <span class="token comment"># 查看集群健康状态</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/nodes?v  <span class="token comment"># 查看集群节点</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/nodes?v<span class="token operator">&amp;</span><span class="token assign-left variable">h</span><span class="token operator">=</span>ip,node.role,name,disk.avail  <span class="token comment"># 磁盘剩余</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/allocation?v  <span class="token comment"># 查看每个数据节点上的分片数（shards），以及每个数据节点磁盘剩余</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/pending_tasks?v  <span class="token comment"># 查看被挂起的任务</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/plugins?v  <span class="token comment"># 查看每个节点正在运行的插件</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/nodeattrs?v  <span class="token comment"># 查看每个节点的自定义属性</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/recovery/.kibana?v<span class="token operator">&amp;</span><span class="token assign-left variable">format</span><span class="token operator">=</span>json<span class="token operator">&amp;</span>pretty  <span class="token comment"># 查看索引分片的恢复视图</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/fielddata?v<span class="token operator">&amp;</span><span class="token assign-left variable">h</span><span class="token operator">=</span>node,field,size  <span class="token comment"># 查看每个数据节点上fielddate当前占用的堆栈内存</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/recovery/.kibana?v<span class="token operator">&amp;</span><span class="token assign-left variable">format</span><span class="token operator">=</span>json<span class="token operator">&amp;</span>pretty  <span class="token comment"># 对某一字段进行查看</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/repositories?v  <span class="token comment"># 查看注册的快照仓库</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/snapshots/repo1?v  <span class="token comment"># 查看快照仓库下的快照</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/thread_pool/bulk?v<span class="token operator">&amp;</span><span class="token assign-left variable">format</span><span class="token operator">=</span>json<span class="token operator">&amp;</span>pretty  <span class="token comment"># 查看每个节点线程池的统计信息</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/indices/.monitoring*?v<span class="token operator">&amp;</span><span class="token assign-left variable">h</span><span class="token operator">=</span>index,health  <span class="token comment"># 查看索引</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/aliases?v<span class="token operator">&amp;</span><span class="token assign-left variable">h</span><span class="token operator">=</span>alias,index  <span class="token comment"># 查看别名</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/templates?v<span class="token operator">&amp;</span><span class="token assign-left variable">format</span><span class="token operator">=</span>json<span class="token operator">&amp;</span>pretty  <span class="token comment"># 查看索引模板</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/count?v  <span class="token comment"># 整个集群文档数</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/count/.monitoring*?v  <span class="token comment"># 某一类索引文档数</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/shards?v<span class="token operator">&amp;</span><span class="token assign-left variable">format</span><span class="token operator">=</span>json<span class="token operator">&amp;</span>pretty<span class="token operator">&amp;</span><span class="token assign-left variable">s</span><span class="token operator">=</span>index  <span class="token comment"># 查看每个索引的分片</span><span class="token function">curl</span> <span class="token parameter variable">-XGET</span> <span class="token variable">${EsIp}</span>_cat/segments/.kibana?v<span class="token operator">&amp;</span><span class="token assign-left variable">format</span><span class="token operator">=</span>json<span class="token operator">&amp;</span>pretty  <span class="token comment"># 查看每个索引的segment</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十、字符串转换为字典"><a href="#十、字符串转换为字典" class="headerlink" title="十、字符串转换为字典"></a>十、字符串转换为字典</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">str</span> <span class="token operator">=</span> <span class="token string">'{"name": "Justin Bieber", "age": 44, "gender": "男"}'</span><span class="token keyword">import</span> jsonuser_dict <span class="token operator">=</span> json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"Justin Bieber"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token string">"gender"</span><span class="token punctuation">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token keyword">import</span> astuser_dict <span class="token operator">=</span> ast<span class="token punctuation">.</span>lateral_eval<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>user_dict<span class="token punctuation">)</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token punctuation">{</span><span class="token string">"name"</span><span class="token punctuation">:</span> <span class="token string">"Justin Bieber"</span><span class="token punctuation">,</span> <span class="token string">"age"</span><span class="token punctuation">:</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token string">"gender"</span><span class="token punctuation">:</span> <span class="token string">"男"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十一、IP转换、判断是否合法"><a href="#十一、IP转换、判断是否合法" class="headerlink" title="十一、IP转换、判断是否合法"></a>十一、IP转换、判断是否合法</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 端口范围 [0, 65535]</span><span class="token keyword">import</span> socket<span class="token punctuation">,</span> structsocket<span class="token punctuation">.</span>inet_ntoa<span class="token punctuation">(</span>struct<span class="token punctuation">.</span>pack<span class="token punctuation">(</span><span class="token string">"!I"</span><span class="token punctuation">,</span> ip<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 整型转换为字符型 int -&gt; str</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-lua" data-language="lua"><code class="language-lua"><span class="token comment">--判断ip是否合法</span><span class="token keyword">function</span> <span class="token function">JudgeIPString</span><span class="token punctuation">(</span>ipStr<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token function">type</span><span class="token punctuation">(</span>ipStr<span class="token punctuation">)</span> <span class="token operator">~=</span> <span class="token string">"string"</span> <span class="token keyword">then</span>        <span class="token keyword">return</span> <span class="token keyword">false</span><span class="token punctuation">;</span>    <span class="token keyword">end</span>        <span class="token comment">--判断长度</span>    <span class="token keyword">local</span> len <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">len</span><span class="token punctuation">(</span>ipStr<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> len <span class="token operator">&lt;</span> <span class="token number">7</span> <span class="token keyword">or</span> len <span class="token operator">&gt;</span> <span class="token number">15</span> <span class="token keyword">then</span> <span class="token comment">--长度不对</span>        <span class="token keyword">return</span> <span class="token keyword">false</span><span class="token punctuation">;</span>    <span class="token keyword">end</span>     <span class="token comment">--判断出现的非数字字符</span>    <span class="token keyword">local</span> point <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>ipStr<span class="token punctuation">,</span> <span class="token string">"%p"</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">--字符"."出现的位置</span>    <span class="token keyword">local</span> pointNum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token comment">--字符"."出现的次数 正常ip有3个"."</span>    <span class="token keyword">while</span> point <span class="token operator">~=</span> <span class="token keyword">nil</span> <span class="token keyword">do</span>        <span class="token keyword">if</span> string<span class="token punctuation">.</span><span class="token function">sub</span><span class="token punctuation">(</span>ipStr<span class="token punctuation">,</span> point<span class="token punctuation">,</span> point<span class="token punctuation">)</span> <span class="token operator">~=</span> <span class="token string">"."</span> <span class="token keyword">then</span> <span class="token comment">--得到非数字符号不是字符"."</span>            <span class="token keyword">return</span> <span class="token keyword">false</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>        pointNum <span class="token operator">=</span> pointNum <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>        point <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>ipStr<span class="token punctuation">,</span> <span class="token string">"%p"</span><span class="token punctuation">,</span> point <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> pointNum <span class="token operator">&gt;</span> <span class="token number">3</span> <span class="token keyword">then</span>            <span class="token keyword">return</span> <span class="token keyword">false</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span>    <span class="token keyword">if</span> pointNum <span class="token operator">~=</span> <span class="token number">3</span> <span class="token keyword">then</span> <span class="token comment">--不是正确的ip格式</span>        <span class="token keyword">return</span> <span class="token keyword">false</span><span class="token punctuation">;</span>    <span class="token keyword">end</span>     <span class="token comment">--判断数字对不对</span>    <span class="token keyword">local</span> num <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> w <span class="token keyword">in</span> string<span class="token punctuation">.</span><span class="token function">gmatch</span><span class="token punctuation">(</span>ipStr<span class="token punctuation">,</span> <span class="token string">"%d+"</span><span class="token punctuation">)</span> <span class="token keyword">do</span>        num<span class="token punctuation">[</span><span class="token operator">#</span>num <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> w<span class="token punctuation">;</span>        <span class="token keyword">local</span> kk <span class="token operator">=</span> <span class="token function">tonumber</span><span class="token punctuation">(</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> kk <span class="token operator">==</span> <span class="token keyword">nil</span> <span class="token keyword">or</span> kk <span class="token operator">&gt;</span> <span class="token number">255</span> <span class="token keyword">then</span> <span class="token comment">--不是数字或超过ip正常取值范围了</span>            <span class="token keyword">return</span> <span class="token keyword">false</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span>     <span class="token keyword">if</span> <span class="token operator">#</span>num <span class="token operator">~=</span> <span class="token number">4</span> <span class="token keyword">then</span> <span class="token comment">--不是4段数字</span>        <span class="token keyword">return</span> <span class="token keyword">false</span><span class="token punctuation">;</span>    <span class="token keyword">end</span>     <span class="token keyword">return</span> ipStr<span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十二、Redis查询key"><a href="#十二、Redis查询key" class="headerlink" title="十二、Redis查询key"></a>十二、Redis查询key</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ redis-cli$ keys *  <span class="token comment"># 查询所有的键</span>$ dbsize  <span class="token comment"># 获取键的总数</span>$ exists key <span class="token punctuation">[</span>key<span class="token punctuation">]</span>  <span class="token comment"># 查看键是否存在</span>$ del <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token punctuation">[</span>key<span class="token punctuation">]</span>  <span class="token comment"># 删除键，可以删除一个或多个</span>$ <span class="token builtin class-name">type</span> <span class="token punctuation">[</span>key<span class="token punctuation">]</span>  <span class="token comment"># 查看键的类型</span>$ get <span class="token punctuation">[</span>key<span class="token punctuation">]</span>  <span class="token comment"># 查看键中的值</span>$ <span class="token builtin class-name">set</span> <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token punctuation">[</span>value<span class="token punctuation">]</span>  <span class="token comment"># 存放键值</span>$ mset <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token punctuation">[</span>value<span class="token punctuation">]</span> <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token punctuation">[</span>value<span class="token punctuation">]</span>  <span class="token comment"># 批量存放键值</span>$ append <span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token punctuation">[</span>value<span class="token punctuation">]</span>  <span class="token comment"># 追加内容</span>$ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十三、celery相关"><a href="#十三、celery相关" class="headerlink" title="十三、celery相关"></a>十三、celery相关</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''启动相关'''</span><span class="token comment"># celery启动worker命令</span>celery <span class="token operator">-</span>A <span class="token punctuation">{</span>包含celery文件的文件夹名称<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">{</span>celery启动文件<span class="token punctuation">}</span> worker <span class="token operator">-</span>l infocelery app <span class="token punctuation">{</span>包含celery文件的文件夹名称<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">{</span>celery启动文件<span class="token punctuation">}</span> worker <span class="token operator">-</span>l info<span class="token comment"># 上面两条命令作用相同</span><span class="token comment"># celery启动beat的命令</span>celery beat <span class="token operator">-</span>A <span class="token punctuation">{</span>包含celery文件的文件夹名称<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">{</span>celery启动文件<span class="token punctuation">}</span> <span class="token operator">-</span>l info  <span class="token comment"># Linux</span>celery beat app <span class="token punctuation">{</span>包含celery文件的文件夹名称<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">{</span>celery启动文件<span class="token punctuation">}</span> <span class="token operator">-</span>l infocelery <span class="token operator">-</span>A <span class="token punctuation">{</span>包含celery文件的文件夹名称<span class="token punctuation">}</span><span class="token punctuation">.</span><span class="token punctuation">{</span>celery启动文件<span class="token punctuation">}</span> beat <span class="token operator">-</span>l info <span class="token comment"># Windows</span><span class="token comment"># 以上两条命令作用相同</span><span class="token triple-quoted-string string">'''停止相关'''</span><span class="token comment"># 杀死所有celery进程</span>ps auxww <span class="token operator">|</span> grep <span class="token string">'celery'</span> <span class="token operator">|</span> awk <span class="token string">'{print $2}'</span> <span class="token operator">|</span> xargs kill <span class="token operator">-</span><span class="token number">9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十四、Python操作"><a href="#十四、Python操作" class="headerlink" title="十四、Python操作"></a>十四、Python操作</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''判断某键是否在字典中'''</span><span class="token punctuation">{</span>字典变量<span class="token punctuation">}</span><span class="token punctuation">.</span>__contains__<span class="token punctuation">(</span><span class="token string">'{键}'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="十五、MongoDB查询语法（大多数不能使用符号的都可以）"><a href="#十五、MongoDB查询语法（大多数不能使用符号的都可以）" class="headerlink" title="十五、MongoDB查询语法（大多数不能使用符号的都可以）"></a>十五、MongoDB查询语法（大多数不能使用符号的都可以）</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token variable">$gt</span><span class="token builtin class-name">:</span> 大于<span class="token variable">$lt</span><span class="token builtin class-name">:</span> 小于<span class="token variable">$gte</span><span class="token builtin class-name">:</span> 大于等于<span class="token variable">$lte</span><span class="token builtin class-name">:</span> 小于等于<span class="token variable">$ne</span><span class="token builtin class-name">:</span> 不等于<span class="token variable">$mod</span><span class="token builtin class-name">:</span> 取模运算db.things.find<span class="token punctuation">(</span><span class="token string">"this.a % 10 == 1"</span><span class="token punctuation">)</span> <span class="token operator">==</span> db.things.find<span class="token punctuation">(</span><span class="token punctuation">{</span>a: <span class="token punctuation">{</span><span class="token variable">$mod</span><span class="token builtin class-name">:</span> <span class="token punctuation">[</span><span class="token number">10</span>, <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token variable">$all</span> 和 <span class="token variable">$in</span><span class="token builtin class-name">:</span> 匹配条件内所有的值<span class="token punctuation">{</span>a: <span class="token punctuation">[</span> <span class="token number">1</span>, <span class="token number">2</span>, <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">}</span>这个：<span class="token variable"><span class="token variable">`</span>db.things.find<span class="token punctuation">(</span><span class="token punctuation">{</span>a: <span class="token punctuation">{</span>$all: <span class="token punctuation">[</span> <span class="token number">2</span>, <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">`</span></span>可以匹配；这个：<span class="token variable"><span class="token variable">`</span>db.things.find<span class="token punctuation">(</span><span class="token punctuation">{</span>a: <span class="token punctuation">{</span>$all: <span class="token punctuation">[</span> <span class="token number">2</span>, <span class="token number">3</span>, <span class="token number">4</span> <span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token variable">`</span></span>无法匹配。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十六、设备一分钟内允许返回的重启思路"><a href="#十六、设备一分钟内允许返回的重启思路" class="headerlink" title="十六、设备一分钟内允许返回的重启思路"></a>十六、设备一分钟内允许返回的重启思路</h2><blockquote><h3 id="python实现："><a href="#python实现：" class="headerlink" title="python实现："></a>python实现：</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&gt;</span><span class="token comment"># 格式化获取现在时间(时：分)</span><span class="token operator">&gt;</span>now_time <span class="token operator">=</span> time<span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%H:%M"</span><span class="token punctuation">,</span> time<span class="token punctuation">.</span>localtime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token comment"># 分隔</span><span class="token operator">&gt;</span>now_time <span class="token operator">=</span> now_time<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token comment"># 给`分`位数字加一</span><span class="token operator">&gt;</span>dis_time <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>now_time<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token comment"># 再将时间进行替换拼接</span><span class="token operator">&gt;</span>now_time <span class="token operator">=</span> <span class="token string">":"</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>dis_time <span class="token keyword">if</span> now_time<span class="token punctuation">.</span>index<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">else</span> i <span class="token keyword">for</span> i <span class="token keyword">in</span> now_time<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token comment"># 执行定时关机</span><span class="token operator">&gt;</span>os<span class="token punctuation">.</span>system<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"shutdown -r </span><span class="token interpolation"><span class="token punctuation">{</span>now_time<span class="token punctuation">}</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="node-js实现："><a href="#node-js实现：" class="headerlink" title="node.js实现："></a>node.js实现：</h3><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token operator">&gt;</span><span class="token comment">// 导入moment模块</span><span class="token operator">&gt;</span><span class="token keyword">const</span> moment <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'moment'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&gt;</span><span class="token keyword">var</span> execSync <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"child_process"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>execSync<span class="token punctuation">;</span><span class="token operator">&gt;</span><span class="token comment">// var now_time = moment().format('YYYY-MM-DD HH:mm:ss');</span><span class="token operator">&gt;</span><span class="token comment">// 获取现在时间（时：分）</span><span class="token operator">&gt;</span><span class="token keyword">var</span> now_time <span class="token operator">=</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'HH:mm'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&gt;</span><span class="token comment">// 给`分`位数字加一</span><span class="token operator">&gt;</span><span class="token keyword">var</span> dis_time <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>now_time<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token operator">&gt;</span><span class="token comment">// 转换成字符串</span><span class="token operator">&gt;</span><span class="token keyword">var</span> dis_time <span class="token operator">=</span> dis_time<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&gt;</span><span class="token comment">// 定义一个空数组</span><span class="token operator">&gt;</span><span class="token keyword">var</span> new_time <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Array</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&gt;</span><span class="token comment">// 将需要的数（时、分）加入数组</span><span class="token operator">&gt;</span>new_time<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>now_time<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&gt;</span>new_time<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dis_time<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&gt;</span><span class="token comment">// 将数组转换为字符串</span><span class="token operator">&gt;</span><span class="token keyword">var</span> new_time <span class="token operator">=</span> new_time<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">":"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token operator">&gt;</span><span class="token function">execSync</span><span class="token punctuation">(</span><span class="token string">"shutdown -r "</span> <span class="token operator">+</span> new_time<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h2 id="十七、node-js时间模块"><a href="#十七、node-js时间模块" class="headerlink" title="十七、node.js时间模块"></a>十七、node.js时间模块</h2><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> moment <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'moment'</span><span class="token punctuation">)</span><span class="token keyword">var</span> now_time <span class="token operator">=</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">'YYYY-MM-DD HH:mm:ss'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="十八、tar命令"><a href="#十八、tar命令" class="headerlink" title="十八、tar命令"></a>十八、tar命令</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># tar打包命令</span>打包：tar <span class="token parameter variable">-cvf</span> 打包以后的文件名 要打包的文件名例子：tar <span class="token parameter variable">-cvf</span> flask.tar flask/打包：tar <span class="token parameter variable">-zcvf</span> 压缩以后的文件名 要压缩的文件名例子：tar <span class="token parameter variable">-zcvf</span> flask.tar.gz flask/<span class="token comment"># tar解压命令</span>解包：tar -xvf<span class="token punctuation">(</span>-zxvf<span class="token punctuation">)</span> 压缩包名指定位置解包：tar -xvf<span class="token punctuation">(</span>-zxvf<span class="token punctuation">)</span> 压缩包名 <span class="token parameter variable">-C</span> 要解压的位置<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="十九、websocket"><a href="#十九、websocket" class="headerlink" title="十九、websocket"></a>十九、websocket</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 报错是需要可证的，直接取消验证许可</span><span class="token keyword">import</span> ssl<span class="token keyword">from</span> websocket <span class="token keyword">import</span> create_connectionurl <span class="token operator">=</span> <span class="token string">'wss://127.0.0.1/...'</span>ws <span class="token operator">=</span> create_connection<span class="token punctuation">(</span>url<span class="token punctuation">,</span> sslopt<span class="token operator">=</span><span class="token punctuation">{</span><span class="token string">'cert_reqs'</span><span class="token punctuation">:</span> ssl<span class="token punctuation">.</span>CERT_NONE<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token comment"># 报错是没有'http、https、ws、wss'协议的，url的前缀不对</span>url <span class="token operator">=</span> <span class="token string">'`wss`://localhost/...'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二十、ip相关命令"><a href="#二十、ip相关命令" class="headerlink" title="二十、ip相关命令"></a>二十、ip相关命令</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">ifconfig</span> eth0 <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">'inet addr'</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'{ print $2}'</span> <span class="token operator">|</span> <span class="token function">awk</span> -F: <span class="token string">'{print $2}'</span>  <span class="token comment"># 获取eth0的ip</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="二十一、Linux一些命令说明"><a href="#二十一、Linux一些命令说明" class="headerlink" title="二十一、Linux一些命令说明"></a>二十一、Linux一些命令说明</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">~/  <span class="token comment">#是指 [/home/使用的用户/] </span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="二十二、systemctl-服务命令无法启动"><a href="#二十二、systemctl-服务命令无法启动" class="headerlink" title="二十二、systemctl 服务命令无法启动"></a>二十二、systemctl 服务命令无法启动</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 因环境变量无法启动</span><span class="token comment"># 场景：python使用的sqlite3与系统中的sqlite3版本不一致导致项目无法启动</span><span class="token comment"># 解决：</span><span class="token comment"># 创建文件：/etc/systemd/system/[服务].service.d/[任意名称].conf</span><span class="token comment"># **注**：服务名称必须与.service文件的相同</span><span class="token comment"># /etc/systemd/system/*.service.d/*.conf</span><span class="token punctuation">[</span>Server<span class="token punctuation">]</span><span class="token assign-left variable">Environment</span><span class="token operator">=</span><span class="token string">"环境变量"</span><span class="token assign-left variable">Environment</span><span class="token operator">=</span><span class="token string">"环境变量"</span><span class="token punctuation">..</span>.<span class="token comment"># 重启服务</span>systemctl daemon-reload<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二十三、无法加载文件-WindowsPowerShell-profile-ps1，因为在此系统上禁止-运行脚本"><a href="#二十三、无法加载文件-WindowsPowerShell-profile-ps1，因为在此系统上禁止-运行脚本" class="headerlink" title="二十三、无法加载文件 WindowsPowerShell\profile.ps1，因为在此系统上禁止 运行脚本"></a>二十三、无法加载文件 WindowsPowerShell\profile.ps1，因为在此系统上禁止 运行脚本</h2><img src="/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-23.png" class><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 解决方案：</span><span class="token comment"># 使用管理员身份打开，Power Shell（Windows终端）</span>Set-ExecutionPolicy RemoteSigned<span class="token comment"># --如果弹出选项就输入： Y</span>Get-ExecutionPolicy<span class="token comment"># --输出：RemoteSigned</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二十四、命令行里面使用python导入报错"><a href="#二十四、命令行里面使用python导入报错" class="headerlink" title="二十四、命令行里面使用python导入报错"></a>二十四、命令行里面使用python导入报错</h2><img src="/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-24.png" class><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 解决方法</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> <span class="token keyword">from</span> django<span class="token punctuation">.</span>conf <span class="token keyword">import</span> settings  <span class="token operator">&gt;&gt;</span><span class="token operator">&gt;</span> settings<span class="token punctuation">.</span>configure<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="二十五、Vue-打包命令"><a href="#二十五、Vue-打包命令" class="headerlink" title="二十五、Vue 打包命令"></a>二十五、Vue 打包命令</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> run build<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="二十六、Navicat-远程连接数据库"><a href="#二十六、Navicat-远程连接数据库" class="headerlink" title="二十六、Navicat 远程连接数据库"></a>二十六、Navicat 远程连接数据库</h2><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql"># 查询被连接主机MySQL用户状态USE mysql;SELECT host,user FROM user WHERE user="root";&gt;&gt;&gt; host       user&gt;&gt;&gt; localhost  root# 修改状态UPDATE user SET host="%" WHERE user="root";# 这样，任意机器都可以使用Navicat连接该设备的数据库了<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二十七、MySQL初始化"><a href="#二十七、MySQL初始化" class="headerlink" title="二十七、MySQL初始化"></a>二十七、MySQL初始化</h2><blockquote><p>MySQL 报错MySQL.sock，不存在</p><p>ERROR 2002 (HY000): Can’t connect to local MySQL server through socket ‘/var/run/mysqld/mysqld.sock’ (2)</p></blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">service</span> mysqld stop          <span class="token comment"># 停止MySQL服务</span><span class="token function">rm</span> <span class="token parameter variable">-rf</span> /var/lib/mysql/*      <span class="token comment"># 删除 /var/lib/mysql/ 下的所有文件</span><span class="token comment"># 下面的操作看情况进行</span><span class="token function">rm</span> /var/lock/subsys/mysqld   <span class="token comment"># 删除锁定文件</span><span class="token function">killall</span> mysqld               <span class="token comment"># 杀死所有MySQL进程</span><span class="token comment"># 上面的操作看情况进行</span>mysqld <span class="token parameter variable">--initialize</span>          <span class="token comment"># 初始化MySQL</span><span class="token function">service</span> mysql start          <span class="token comment"># 启动MySQL服务</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="免密启动"><a href="#免密启动" class="headerlink" title="免密启动"></a>免密启动</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">vim</span> /etc/mysql/mysql.conf.d/mysqld.cnf<span class="token punctuation">[</span>mysqld<span class="token punctuation">]</span>skip-grant-table<span class="token comment"># 退出</span><span class="token function">service</span> mysql restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="清空-authentication-string-字段"><a href="#清空-authentication-string-字段" class="headerlink" title="清空 authentication_string 字段"></a>清空 authentication_string 字段</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql -uroot                 # 进入MySQLUSE mysql;                   # 使用mysql数据库UPDATE `user`SET authentication_string=""WHERE user="root";           # 修改root用户密码为空exit                         # 退出数据库# 关闭免密，并重启服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h3><pre class="line-numbers language-mysql" data-language="mysql"><code class="language-mysql">mysql -urootSET password='自己的密码';FLUSH PRIVILEGES;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="二十八、Vue自适应"><a href="#二十八、Vue自适应" class="headerlink" title="二十八、Vue自适应"></a>二十八、Vue自适应</h2><pre class="line-numbers language-vue" data-language="vue"><code class="language-vue">&lt;el-col        :lg="{ span: 3, offset: 0 }"        :md="{ span: 8, offset: 0 }"        :sm="{ span: 8, offset: 0 }"        :xl="{ span: 6, offset: 0 }"         :xs="{ span: 8, offset: 0 }" &gt;&lt;/el-col&gt;&lt;!--栅栏一共24个lg: 大屏显示器，办公使用md：中屏显示器，笔记本                   span 栅格占据的列数 offset 栅格左侧的间隔数sm：小屏显示器，平板xs：超小屏显示器，手机xl：2k屏幕。--&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="二十九、nvm-node管理器"><a href="#二十九、nvm-node管理器" class="headerlink" title="二十九、nvm node管理器"></a>二十九、nvm node管理器</h2><p><strong>注</strong>：nvm安装前删除计算机中的node.js</p><h3 id="第一步：下载nvm"><a href="#第一步：下载nvm" class="headerlink" title="第一步：下载nvm"></a>第一步：下载nvm</h3><blockquote><p>路径：<a href="https://github.com/coreybutler/nvm-windows/releases">Releases · coreybutler/nvm-windows (github.com)</a></p></blockquote><img src="/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-29.png" class><h3 id="第二步：安装"><a href="#第二步：安装" class="headerlink" title="第二步：安装"></a>第二步：安装</h3><blockquote><p>安装步骤</p><h4 id="第一步：同意协议、下一步；（没什么说的，就不加图了）"><a href="#第一步：同意协议、下一步；（没什么说的，就不加图了）" class="headerlink" title="第一步：同意协议、下一步；（没什么说的，就不加图了）"></a>第一步：同意协议、下一步；（没什么说的，就不加图了）</h4><h4 id="第二步：选择nvm本地安装目录；（最好不要有空格）"><a href="#第二步：选择nvm本地安装目录；（最好不要有空格）" class="headerlink" title="第二步：选择nvm本地安装目录；（最好不要有空格）"></a>第二步：选择nvm本地安装目录；（最好不要有空格）</h4><h4 id="第三步：设置nodejs快捷方式路径；（需要手动创建名为nodejs的快捷方式）"><a href="#第三步：设置nodejs快捷方式路径；（需要手动创建名为nodejs的快捷方式）" class="headerlink" title="第三步：设置nodejs快捷方式路径；（需要手动创建名为nodejs的快捷方式）"></a>第三步：设置nodejs快捷方式路径；（需要手动创建名为nodejs的快捷方式）</h4><h4 id="第四部：install-finish"><a href="#第四部：install-finish" class="headerlink" title="第四部：install -> finish"></a>第四部：install -&gt; finish</h4></blockquote><h3 id="第三步：查看"><a href="#第三步：查看" class="headerlink" title="第三步：查看"></a>第三步：查看</h3><blockquote><p>命令窗口键入：nvm （查看是否安装成功）</p></blockquote><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>–help</td><td>显示命令行帮助信息</td></tr><tr><td>–version</td><td>打印当前nvm版本号</td></tr><tr><td>deactivate</td><td>取消当前nvm命令行效果</td></tr><tr><td>install [-s] <version></version></td><td>从源下载一个版本为<version>的node.js</version></td></tr><tr><td>uninstall <version></version></td><td>卸载一个版本为<version>的node.js</version></td></tr><tr><td>use <version></version></td><td>使用<version>版本的node</version></td></tr><tr><td>current</td><td>查看当前使用的node版本</td></tr><tr><td>ls</td><td>查看所有<strong>本地</strong>可用的node版本</td></tr><tr><td>ls <version></version></td><td>查看指定版本</td></tr><tr><td>ls-remote</td><td>查看所有可用的远程版本（Linux与Mac）</td></tr><tr><td>list available</td><td>同上（windows）</td></tr></tbody></table><h2 id="三十、搭梯子"><a href="#三十、搭梯子" class="headerlink" title="三十、搭梯子"></a>三十、搭梯子</h2><p>购买远程代理：<a href="https://x.syksdw.com/#/dashboard">X寄场</a></p><p>登录用户名：<a href="mailto:lyt_sy@sina.com">lyt_sy@sina.com</a></p><p>密    码：设置好的密码</p><p>安装包路径：<a href="https://github.com/97668589/v2rayN/releases/tag/v6.9">v2rayN</a></p><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><ol><li><p>双击运行；</p><img src="/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-1.png" class><ul><li>如果没有将程序放到桌面，找不到程序可以双击右下角<img src="/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-2.png" class></li></ul></li><li><p>登录x-寄场：复制v2ray订阅地址；</p><img src="/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-3.png" class></li><li><p>填写备注等信息，注意：勾选<strong>备用</strong>，然后保存；</p><img src="/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-4.png" class></li><li><p>更新当前订阅；</p><img src="/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-5.png" class></li><li><p>测试-启用节点（选择一个右键即可）。</p><img src="/2023/11/05/bi-ji/%E7%AC%94%E8%AE%B0-30-6.png" class></li></ol><h2 id="三十一、PostgreSQL设置自增长"><a href="#三十一、PostgreSQL设置自增长" class="headerlink" title="三十一、PostgreSQL设置自增长"></a>三十一、PostgreSQL设置自增长</h2><pre class="line-numbers language-postgresql" data-language="postgresql"><code class="language-postgresql">-- PostgreSQL 与 MySQL 不同，MySQL设置自增长直接用autoincrement设置，PostgreSQL需要先设置序列对象，并在创建字段时使用该序列对象作为缺省值，需要设置该字段不为空/* 设置序列对象 */[CREATE | ALTER | DROP] SEQUENCE IF NOT EXISTS &lt;序列对象名&gt;_seqINCREMENT 1          -- 序列每次自增多少START 1              -- 从1开始MINVALUE 1           -- 序列最小值MAXVALUE 2147483647  -- 序列最大值CACHE 1              -- 缓存序列（服务器重启之后缓存会丢失)NO CYCLE;            -- 是否循环（NO CYCLE | CYCLE: 序列增长到最大值之后是否从新开始）/* 创建表时引用 */CREATE TABLE &lt;表名&gt; (    "id" int4 NOT NULL DEFAULT NEXTVAL('&lt;序列对象名&gt;_seq::regclass'),    ......)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="三十二、VSCode-远程免密连接"><a href="#三十二、VSCode-远程免密连接" class="headerlink" title="三十二、VSCode 远程免密连接"></a>三十二、VSCode 远程免密连接</h2><p>VSCode没有保存密码功能，只能通过ssh秘钥的方式进行自动登录，下面是使用RSA秘钥方式自动登录开发服务器。</p><blockquote><p>默认每次连接，打开文件都得输入密码，当密码很复杂的时候这是一件很痛苦的是。</p></blockquote><h3 id="1-生成秘钥对"><a href="#1-生成秘钥对" class="headerlink" title="1.生成秘钥对"></a>1.生成秘钥对</h3><p>默认电脑上安装了git，没有的话就先安装；打开终端或者git-bash输入以下命令（邮箱使用自己的）。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ ssh-keygen <span class="token parameter variable">-t</span> rsa <span class="token parameter variable">-C</span> <span class="token string">"&lt;邮箱&gt;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后一路回车直到完成；秘钥文件存放在：<code>C:\User\&lt;用户名&gt;\.ssh</code></p><h3 id="2-将公钥上传到服务器"><a href="#2-将公钥上传到服务器" class="headerlink" title="2.将公钥上传到服务器"></a>2.将公钥上传到服务器</h3><ol><li>将id_rsa.pub重命名为authorized_keys；</li><li>然后上传到服务器的/root/.ssh目录下（没有则新建.ssh）；</li><li>修改VSCode的ssh_config文件。</li></ol><h3 id="3-配置VSCode远程ssh文件"><a href="#3-配置VSCode远程ssh文件" class="headerlink" title="3.配置VSCode远程ssh文件"></a>3.配置VSCode远程ssh文件</h3><p>以下是配置文件的栗子</p><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini">Host &lt;服务IP&gt;    HostName &lt;服务名称&gt;    User &lt;ssh用户名&gt;    Port &lt;ssh连接端口&gt;    PreferredAuthentications publickey    IdentityFile &lt;本地key文件&gt;<span class="token comment"># 举例</span>Host 10.10.0.189    HostName 10.10.0.189    User root    Port 10022    PreferredAuthentications LGGawZI4EhMyjgvlcrTVYQMwZfe2c19cHzxABL3IUPA    IdentityFile "C:\Users\22759\.ssh\id_rsa"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-常见问题解决方法"><a href="#4-常见问题解决方法" class="headerlink" title="4.常见问题解决方法"></a>4.常见问题解决方法</h3><ol><li><p>文件权限不对</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">chmod</span> <span class="token number">700</span> /root$ <span class="token function">chmod</span> <span class="token number">700</span> /root/.ssh$ <span class="token function">chmod</span> <span class="token number">644</span> /root/.ssh/authorized_keys<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>sshd配置问题</p><p>编辑/etc/ssh/sshd_config文件；找到对应配置取消前面注释。</p><pre class="line-numbers language-ini" data-language="ini"><code class="language-ini"><span class="token comment"># 开启秘钥登录</span>PubkeyAuthentication yesAuthorizedKeysFile .ssh/authorized_keys .ssh/authorized_keys2<span class="token comment"># 将下面的配置注释掉</span><span class="token comment"># RSAAuthentication no</span><span class="token comment"># 退出并执行重启sshd</span>service sshd restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> MySQL </tag>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
            <tag> sqlite3 </tag>
            
            <tag> ES </tag>
            
            <tag> MongoDB </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
